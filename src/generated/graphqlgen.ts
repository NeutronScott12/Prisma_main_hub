// Code generated by github.com/prisma/graphqlgen, DO NOT EDIT.

import { GraphQLResolveInfo } from 'graphql'
import {
	MyUser,
	ProfileResponse,
	ProfileError,
	FriendRemoveResponse,
	DeleteCommentResponse,
	LoginResponse,
	RegisterResponse,
	ForgotPasswordResponse,
	VoidResponse,
	Error,
	AddFriendResponse
} from '../tstypes/index'
import {
	Notification,
	User,
	Comment,
	Rating,
	File,
	Team,
	Channel,
	Message,
	CommentConnection,
	PageInfo,
	CommentEdge,
	AggregateComment,
	Todo,
	TodoProject,
	Order,
	Product,
	Customer,
	UserSubscriptionPayload,
	UserPreviousValues,
	NotificationSubscriptionPayload,
	NotificationPreviousValues,
	MessageSubscriptionPayload,
	MessagePreviousValues
} from './prisma-client/index'
import { Context } from '../tstypes/index'

type UserRole = 'ADMIN' | 'MODERATOR' | 'USER'
type NotificationOrderByInput =
	| 'id_ASC'
	| 'id_DESC'
	| 'message_ASC'
	| 'message_DESC'
	| 'createdAt_ASC'
	| 'createdAt_DESC'
	| 'updatedAt_ASC'
	| 'updatedAt_DESC'
type CommentOrderByInput =
	| 'id_ASC'
	| 'id_DESC'
	| 'body_ASC'
	| 'body_DESC'
	| 'parentId_ASC'
	| 'parentId_DESC'
	| 'pageId_ASC'
	| 'pageId_DESC'
	| 'createdAt_ASC'
	| 'createdAt_DESC'
	| 'updatedAt_ASC'
	| 'updatedAt_DESC'
type UserOrderByInput =
	| 'id_ASC'
	| 'id_DESC'
	| 'email_ASC'
	| 'email_DESC'
	| 'set_private_ASC'
	| 'set_private_DESC'
	| 'username_ASC'
	| 'username_DESC'
	| 'password_ASC'
	| 'password_DESC'
	| 'gitHubId_ASC'
	| 'gitHubId_DESC'
	| 'facebookId_ASC'
	| 'facebookId_DESC'
	| 'twitterId_ASC'
	| 'twitterId_DESC'
	| 'gmailId_ASC'
	| 'gmailId_DESC'
	| 'private_ASC'
	| 'private_DESC'
	| 'confirmed_ASC'
	| 'confirmed_DESC'
	| 'online_ASC'
	| 'online_DESC'
	| 'createdAt_ASC'
	| 'createdAt_DESC'
	| 'updatedAt_ASC'
	| 'updatedAt_DESC'
	| 'role_ASC'
	| 'role_DESC'
type TeamOrderByInput =
	| 'id_ASC'
	| 'id_DESC'
	| 'name_ASC'
	| 'name_DESC'
	| 'slug_ASC'
	| 'slug_DESC'
	| 'createdAt_ASC'
	| 'createdAt_DESC'
	| 'updatedAt_ASC'
	| 'updatedAt_DESC'
	| 'confirmed_ASC'
	| 'confirmed_DESC'
	| 'online_ASC'
	| 'online_DESC'
type ChannelOrderByInput =
	| 'id_ASC'
	| 'id_DESC'
	| 'name_ASC'
	| 'name_DESC'
	| 'slug_ASC'
	| 'slug_DESC'
	| 'public_ASC'
	| 'public_DESC'
	| 'createdAt_ASC'
	| 'createdAt_DESC'
	| 'updatedAt_ASC'
	| 'updatedAt_DESC'
type MessageOrderByInput =
	| 'id_ASC'
	| 'id_DESC'
	| 'body_ASC'
	| 'body_DESC'
	| 'parentId_ASC'
	| 'parentId_DESC'
	| 'url_ASC'
	| 'url_DESC'
	| 'filetype_ASC'
	| 'filetype_DESC'
	| 'createdAt_ASC'
	| 'createdAt_DESC'
	| 'updatedAt_ASC'
	| 'updatedAt_DESC'
type TodoOrderByInput =
	| 'id_ASC'
	| 'id_DESC'
	| 'body_ASC'
	| 'body_DESC'
	| 'createdAt_ASC'
	| 'createdAt_DESC'
	| 'updatedAt_ASC'
	| 'updatedAt_DESC'
type ProductOrderByInput =
	| 'id_ASC'
	| 'id_DESC'
	| 'name_ASC'
	| 'name_DESC'
	| 'stock_ASC'
	| 'stock_DESC'
	| 'price_ASC'
	| 'price_DESC'
	| 'createdAt_ASC'
	| 'createdAt_DESC'
	| 'updatedAt_ASC'
	| 'updatedAt_DESC'
type MutationType = 'CREATED' | 'UPDATED' | 'DELETED'

export namespace QueryResolvers {
	export const defaultResolvers = {}

	export interface ArgsGetProfile {
		username: string
	}

	export interface ArgsQueryComment {
		parentId: string
		limit: number | null
		offset: number | null
	}

	export interface ArgsShowTeam {
		teamSlug: string
	}

	export interface ArgsShowTeams {
		authorId: string
	}

	export interface ArgsShowChannel {
		channelId: string
	}

	export type CurrentUserResolver = (
		parent: undefined,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => MyUser | null | Promise<MyUser | null>

	export type GetProfileResolver = (
		parent: undefined,
		args: ArgsGetProfile,
		ctx: Context,
		info: GraphQLResolveInfo
	) => ProfileResponse | null | Promise<ProfileResponse | null>

	export type QueryCommentResolver = (
		parent: undefined,
		args: ArgsQueryComment,
		ctx: Context,
		info: GraphQLResolveInfo
	) => CommentConnection | Promise<CommentConnection>

	export type QueryUsersResolver = (
		parent: undefined,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => MyUser[] | Promise<MyUser[]>

	export type ShowTeamResolver = (
		parent: undefined,
		args: ArgsShowTeam,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Team | Promise<Team>

	export type ShowTeamsResolver = (
		parent: undefined,
		args: ArgsShowTeams,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Team[] | Promise<Team[]>

	export type ShowChannelResolver = (
		parent: undefined,
		args: ArgsShowChannel,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Channel | Promise<Channel>

	export type FetchTodosResolver = (
		parent: undefined,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => Todo[] | Promise<Todo[]>

	export interface Type {
		currentUser: (
			parent: undefined,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => MyUser | null | Promise<MyUser | null>

		getProfile: (
			parent: undefined,
			args: ArgsGetProfile,
			ctx: Context,
			info: GraphQLResolveInfo
		) => ProfileResponse | null | Promise<ProfileResponse | null>

		queryComment: (
			parent: undefined,
			args: ArgsQueryComment,
			ctx: Context,
			info: GraphQLResolveInfo
		) => CommentConnection | Promise<CommentConnection>

		queryUsers: (
			parent: undefined,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => MyUser[] | Promise<MyUser[]>

		showTeam: (
			parent: undefined,
			args: ArgsShowTeam,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Team | Promise<Team>

		showTeams: (
			parent: undefined,
			args: ArgsShowTeams,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Team[] | Promise<Team[]>

		showChannel: (
			parent: undefined,
			args: ArgsShowChannel,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Channel | Promise<Channel>

		fetchTodos: (
			parent: undefined,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => Todo[] | Promise<Todo[]>
	}
}

export namespace MyUserResolvers {
	export const defaultResolvers = {
		id: (parent: MyUser) => parent.id,
		email: (parent: MyUser) => parent.email,
		set_private: (parent: MyUser) => parent.set_private,
		username: (parent: MyUser) => parent.username,
		gitHubId: (parent: MyUser) =>
			parent.gitHubId === undefined ? null : parent.gitHubId,
		facebookId: (parent: MyUser) =>
			parent.facebookId === undefined ? null : parent.facebookId,
		twitterId: (parent: MyUser) =>
			parent.twitterId === undefined ? null : parent.twitterId,
		gmailId: (parent: MyUser) =>
			parent.gmailId === undefined ? null : parent.gmailId,
		private: (parent: MyUser) => parent.private,
		confirmed: (parent: MyUser) => parent.confirmed,
		online: (parent: MyUser) => parent.online,
		createdAt: (parent: MyUser) => parent.createdAt,
		updatedAt: (parent: MyUser) => parent.updatedAt
	}

	export type IdResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type EmailResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type NotificationsResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => Notification[] | Promise<Notification[]>

	export type Set_privateResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export type UsernameResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type GitHubIdResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | null | Promise<string | null>

	export type FacebookIdResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | null | Promise<string | null>

	export type TwitterIdResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | null | Promise<string | null>

	export type GmailIdResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | null | Promise<string | null>

	export type DirectMessagesResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => Comment[] | Promise<Comment[]>

	export type Avatar_urlResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => File | Promise<File>

	export type PrivateResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export type BlockedUsersResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => User[] | Promise<User[]>

	export type ConfirmedResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export type OnlineResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export type FriendsResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => User[] | Promise<User[]>

	export type Friend_requestsResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => User[] | Promise<User[]>

	export type CreatedAtResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type UpdatedAtResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type RoleResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => UserRole | Promise<UserRole>

	export type TeamsResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => Team[] | Promise<Team[]>

	export type ChannelsResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => Channel[] | Promise<Channel[]>

	export type Owned_teamsResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => Team[] | Promise<Team[]>

	export type Owned_channelsResolver = (
		parent: MyUser,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => Channel[] | Promise<Channel[]>

	export interface Type {
		id: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		email: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		notifications: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => Notification[] | Promise<Notification[]>

		set_private: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>

		username: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		gitHubId: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | null | Promise<string | null>

		facebookId: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | null | Promise<string | null>

		twitterId: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | null | Promise<string | null>

		gmailId: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | null | Promise<string | null>

		directMessages: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => Comment[] | Promise<Comment[]>

		avatar_url: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => File | Promise<File>

		private: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>

		blockedUsers: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => User[] | Promise<User[]>

		confirmed: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>

		online: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>

		friends: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => User[] | Promise<User[]>

		friend_requests: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => User[] | Promise<User[]>

		createdAt: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		updatedAt: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		role: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => UserRole | Promise<UserRole>

		teams: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => Team[] | Promise<Team[]>

		channels: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => Channel[] | Promise<Channel[]>

		owned_teams: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => Team[] | Promise<Team[]>

		owned_channels: (
			parent: MyUser,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => Channel[] | Promise<Channel[]>
	}
}

export namespace NotificationResolvers {
	export const defaultResolvers = {
		id: (parent: Notification) => parent.id,
		message: (parent: Notification) => parent.message
	}

	export type IdResolver = (
		parent: Notification,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type MessageResolver = (
		parent: Notification,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type AuthorResolver = (
		parent: Notification,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => User | Promise<User>

	export interface Type {
		id: (
			parent: Notification,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		message: (
			parent: Notification,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		author: (
			parent: Notification,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => User | Promise<User>
	}
}

export namespace UserResolvers {
	export const defaultResolvers = {
		id: (parent: User) => parent.id,
		email: (parent: User) => parent.email,
		set_private: (parent: User) => parent.set_private,
		username: (parent: User) => parent.username,
		password: (parent: User) => parent.password,
		gitHubId: (parent: User) =>
			parent.gitHubId === undefined ? null : parent.gitHubId,
		facebookId: (parent: User) =>
			parent.facebookId === undefined ? null : parent.facebookId,
		twitterId: (parent: User) =>
			parent.twitterId === undefined ? null : parent.twitterId,
		gmailId: (parent: User) =>
			parent.gmailId === undefined ? null : parent.gmailId,
		private: (parent: User) => parent.private,
		confirmed: (parent: User) => parent.confirmed,
		online: (parent: User) => parent.online,
		createdAt: (parent: User) => parent.createdAt,
		updatedAt: (parent: User) => parent.updatedAt,
		role: (parent: User) => parent.role
	}

	export interface NotificationWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		message: string | null
		message_not: string | null
		message_in: string[]
		message_not_in: string[]
		message_lt: string | null
		message_lte: string | null
		message_gt: string | null
		message_gte: string | null
		message_contains: string | null
		message_not_contains: string | null
		message_starts_with: string | null
		message_not_starts_with: string | null
		message_ends_with: string | null
		message_not_ends_with: string | null
		author: UserWhereInput | null
		AND: NotificationWhereInput[]
		OR: NotificationWhereInput[]
		NOT: NotificationWhereInput[]
	}
	export interface UserWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		email: string | null
		email_not: string | null
		email_in: string[]
		email_not_in: string[]
		email_lt: string | null
		email_lte: string | null
		email_gt: string | null
		email_gte: string | null
		email_contains: string | null
		email_not_contains: string | null
		email_starts_with: string | null
		email_not_starts_with: string | null
		email_ends_with: string | null
		email_not_ends_with: string | null
		notifications_every: NotificationWhereInput | null
		notifications_some: NotificationWhereInput | null
		notifications_none: NotificationWhereInput | null
		set_private: boolean | null
		set_private_not: boolean | null
		username: string | null
		username_not: string | null
		username_in: string[]
		username_not_in: string[]
		username_lt: string | null
		username_lte: string | null
		username_gt: string | null
		username_gte: string | null
		username_contains: string | null
		username_not_contains: string | null
		username_starts_with: string | null
		username_not_starts_with: string | null
		username_ends_with: string | null
		username_not_ends_with: string | null
		password: string | null
		password_not: string | null
		password_in: string[]
		password_not_in: string[]
		password_lt: string | null
		password_lte: string | null
		password_gt: string | null
		password_gte: string | null
		password_contains: string | null
		password_not_contains: string | null
		password_starts_with: string | null
		password_not_starts_with: string | null
		password_ends_with: string | null
		password_not_ends_with: string | null
		gitHubId: string | null
		gitHubId_not: string | null
		gitHubId_in: string[]
		gitHubId_not_in: string[]
		gitHubId_lt: string | null
		gitHubId_lte: string | null
		gitHubId_gt: string | null
		gitHubId_gte: string | null
		gitHubId_contains: string | null
		gitHubId_not_contains: string | null
		gitHubId_starts_with: string | null
		gitHubId_not_starts_with: string | null
		gitHubId_ends_with: string | null
		gitHubId_not_ends_with: string | null
		facebookId: string | null
		facebookId_not: string | null
		facebookId_in: string[]
		facebookId_not_in: string[]
		facebookId_lt: string | null
		facebookId_lte: string | null
		facebookId_gt: string | null
		facebookId_gte: string | null
		facebookId_contains: string | null
		facebookId_not_contains: string | null
		facebookId_starts_with: string | null
		facebookId_not_starts_with: string | null
		facebookId_ends_with: string | null
		facebookId_not_ends_with: string | null
		twitterId: string | null
		twitterId_not: string | null
		twitterId_in: string[]
		twitterId_not_in: string[]
		twitterId_lt: string | null
		twitterId_lte: string | null
		twitterId_gt: string | null
		twitterId_gte: string | null
		twitterId_contains: string | null
		twitterId_not_contains: string | null
		twitterId_starts_with: string | null
		twitterId_not_starts_with: string | null
		twitterId_ends_with: string | null
		twitterId_not_ends_with: string | null
		gmailId: string | null
		gmailId_not: string | null
		gmailId_in: string[]
		gmailId_not_in: string[]
		gmailId_lt: string | null
		gmailId_lte: string | null
		gmailId_gt: string | null
		gmailId_gte: string | null
		gmailId_contains: string | null
		gmailId_not_contains: string | null
		gmailId_starts_with: string | null
		gmailId_not_starts_with: string | null
		gmailId_ends_with: string | null
		gmailId_not_ends_with: string | null
		directMessages_every: CommentWhereInput | null
		directMessages_some: CommentWhereInput | null
		directMessages_none: CommentWhereInput | null
		avatar_url: FileWhereInput | null
		private: boolean | null
		private_not: boolean | null
		blockedUsers_every: UserWhereInput | null
		blockedUsers_some: UserWhereInput | null
		blockedUsers_none: UserWhereInput | null
		confirmed: boolean | null
		confirmed_not: boolean | null
		online: boolean | null
		online_not: boolean | null
		friends_every: UserWhereInput | null
		friends_some: UserWhereInput | null
		friends_none: UserWhereInput | null
		friend_requests_every: UserWhereInput | null
		friend_requests_some: UserWhereInput | null
		friend_requests_none: UserWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		role: UserRole | null
		role_not: UserRole | null
		role_in: UserRole[]
		role_not_in: UserRole[]
		teams_every: TeamWhereInput | null
		teams_some: TeamWhereInput | null
		teams_none: TeamWhereInput | null
		channels_every: ChannelWhereInput | null
		channels_some: ChannelWhereInput | null
		channels_none: ChannelWhereInput | null
		owned_teams_every: TeamWhereInput | null
		owned_teams_some: TeamWhereInput | null
		owned_teams_none: TeamWhereInput | null
		owned_channels_every: ChannelWhereInput | null
		owned_channels_some: ChannelWhereInput | null
		owned_channels_none: ChannelWhereInput | null
		AND: UserWhereInput[]
		OR: UserWhereInput[]
		NOT: UserWhereInput[]
	}
	export interface CommentWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		body: string | null
		body_not: string | null
		body_in: string[]
		body_not_in: string[]
		body_lt: string | null
		body_lte: string | null
		body_gt: string | null
		body_gte: string | null
		body_contains: string | null
		body_not_contains: string | null
		body_starts_with: string | null
		body_not_starts_with: string | null
		body_ends_with: string | null
		body_not_ends_with: string | null
		parentId: string | null
		parentId_not: string | null
		parentId_in: string[]
		parentId_not_in: string[]
		parentId_lt: string | null
		parentId_lte: string | null
		parentId_gt: string | null
		parentId_gte: string | null
		parentId_contains: string | null
		parentId_not_contains: string | null
		parentId_starts_with: string | null
		parentId_not_starts_with: string | null
		parentId_ends_with: string | null
		parentId_not_ends_with: string | null
		pageId: string | null
		pageId_not: string | null
		pageId_in: string[]
		pageId_not_in: string[]
		pageId_lt: string | null
		pageId_lte: string | null
		pageId_gt: string | null
		pageId_gte: string | null
		pageId_contains: string | null
		pageId_not_contains: string | null
		pageId_starts_with: string | null
		pageId_not_starts_with: string | null
		pageId_ends_with: string | null
		pageId_not_ends_with: string | null
		repliedTo: UserWhereInput | null
		ratings: RatingWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		replies_every: CommentWhereInput | null
		replies_some: CommentWhereInput | null
		replies_none: CommentWhereInput | null
		author: UserWhereInput | null
		AND: CommentWhereInput[]
		OR: CommentWhereInput[]
		NOT: CommentWhereInput[]
	}
	export interface RatingWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		vote: number | null
		vote_not: number | null
		vote_in: number[]
		vote_not_in: number[]
		vote_lt: number | null
		vote_lte: number | null
		vote_gt: number | null
		vote_gte: number | null
		author_every: UserWhereInput | null
		author_some: UserWhereInput | null
		author_none: UserWhereInput | null
		AND: RatingWhereInput[]
		OR: RatingWhereInput[]
		NOT: RatingWhereInput[]
	}
	export interface FileWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		filename: string | null
		filename_not: string | null
		filename_in: string[]
		filename_not_in: string[]
		filename_lt: string | null
		filename_lte: string | null
		filename_gt: string | null
		filename_gte: string | null
		filename_contains: string | null
		filename_not_contains: string | null
		filename_starts_with: string | null
		filename_not_starts_with: string | null
		filename_ends_with: string | null
		filename_not_ends_with: string | null
		mimetype: string | null
		mimetype_not: string | null
		mimetype_in: string[]
		mimetype_not_in: string[]
		mimetype_lt: string | null
		mimetype_lte: string | null
		mimetype_gt: string | null
		mimetype_gte: string | null
		mimetype_contains: string | null
		mimetype_not_contains: string | null
		mimetype_starts_with: string | null
		mimetype_not_starts_with: string | null
		mimetype_ends_with: string | null
		mimetype_not_ends_with: string | null
		encoding: string | null
		encoding_not: string | null
		encoding_in: string[]
		encoding_not_in: string[]
		encoding_lt: string | null
		encoding_lte: string | null
		encoding_gt: string | null
		encoding_gte: string | null
		encoding_contains: string | null
		encoding_not_contains: string | null
		encoding_starts_with: string | null
		encoding_not_starts_with: string | null
		encoding_ends_with: string | null
		encoding_not_ends_with: string | null
		key: string | null
		key_not: string | null
		key_in: string[]
		key_not_in: string[]
		key_lt: string | null
		key_lte: string | null
		key_gt: string | null
		key_gte: string | null
		key_contains: string | null
		key_not_contains: string | null
		key_starts_with: string | null
		key_not_starts_with: string | null
		key_ends_with: string | null
		key_not_ends_with: string | null
		ETag: string | null
		ETag_not: string | null
		ETag_in: string[]
		ETag_not_in: string[]
		ETag_lt: string | null
		ETag_lte: string | null
		ETag_gt: string | null
		ETag_gte: string | null
		ETag_contains: string | null
		ETag_not_contains: string | null
		ETag_starts_with: string | null
		ETag_not_starts_with: string | null
		ETag_ends_with: string | null
		ETag_not_ends_with: string | null
		url: string | null
		url_not: string | null
		url_in: string[]
		url_not_in: string[]
		url_lt: string | null
		url_lte: string | null
		url_gt: string | null
		url_gte: string | null
		url_contains: string | null
		url_not_contains: string | null
		url_starts_with: string | null
		url_not_starts_with: string | null
		url_ends_with: string | null
		url_not_ends_with: string | null
		AND: FileWhereInput[]
		OR: FileWhereInput[]
		NOT: FileWhereInput[]
	}
	export interface TeamWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		name: string | null
		name_not: string | null
		name_in: string[]
		name_not_in: string[]
		name_lt: string | null
		name_lte: string | null
		name_gt: string | null
		name_gte: string | null
		name_contains: string | null
		name_not_contains: string | null
		name_starts_with: string | null
		name_not_starts_with: string | null
		name_ends_with: string | null
		name_not_ends_with: string | null
		slug: string | null
		slug_not: string | null
		slug_in: string[]
		slug_not_in: string[]
		slug_lt: string | null
		slug_lte: string | null
		slug_gt: string | null
		slug_gte: string | null
		slug_contains: string | null
		slug_not_contains: string | null
		slug_starts_with: string | null
		slug_not_starts_with: string | null
		slug_ends_with: string | null
		slug_not_ends_with: string | null
		moderators_every: UserWhereInput | null
		moderators_some: UserWhereInput | null
		moderators_none: UserWhereInput | null
		author: UserWhereInput | null
		members_every: UserWhereInput | null
		members_some: UserWhereInput | null
		members_none: UserWhereInput | null
		channels_every: ChannelWhereInput | null
		channels_some: ChannelWhereInput | null
		channels_none: ChannelWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		confirmed: boolean | null
		confirmed_not: boolean | null
		online: boolean | null
		online_not: boolean | null
		AND: TeamWhereInput[]
		OR: TeamWhereInput[]
		NOT: TeamWhereInput[]
	}
	export interface ChannelWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		name: string | null
		name_not: string | null
		name_in: string[]
		name_not_in: string[]
		name_lt: string | null
		name_lte: string | null
		name_gt: string | null
		name_gte: string | null
		name_contains: string | null
		name_not_contains: string | null
		name_starts_with: string | null
		name_not_starts_with: string | null
		name_ends_with: string | null
		name_not_ends_with: string | null
		slug: string | null
		slug_not: string | null
		slug_in: string[]
		slug_not_in: string[]
		slug_lt: string | null
		slug_lte: string | null
		slug_gt: string | null
		slug_gte: string | null
		slug_contains: string | null
		slug_not_contains: string | null
		slug_starts_with: string | null
		slug_not_starts_with: string | null
		slug_ends_with: string | null
		slug_not_ends_with: string | null
		moderators_every: UserWhereInput | null
		moderators_some: UserWhereInput | null
		moderators_none: UserWhereInput | null
		public: boolean | null
		public_not: boolean | null
		messages_every: MessageWhereInput | null
		messages_some: MessageWhereInput | null
		messages_none: MessageWhereInput | null
		members_every: UserWhereInput | null
		members_some: UserWhereInput | null
		members_none: UserWhereInput | null
		author: UserWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		AND: ChannelWhereInput[]
		OR: ChannelWhereInput[]
		NOT: ChannelWhereInput[]
	}
	export interface MessageWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		body: string | null
		body_not: string | null
		body_in: string[]
		body_not_in: string[]
		body_lt: string | null
		body_lte: string | null
		body_gt: string | null
		body_gte: string | null
		body_contains: string | null
		body_not_contains: string | null
		body_starts_with: string | null
		body_not_starts_with: string | null
		body_ends_with: string | null
		body_not_ends_with: string | null
		parentId: string | null
		parentId_not: string | null
		parentId_in: string[]
		parentId_not_in: string[]
		parentId_lt: string | null
		parentId_lte: string | null
		parentId_gt: string | null
		parentId_gte: string | null
		parentId_contains: string | null
		parentId_not_contains: string | null
		parentId_starts_with: string | null
		parentId_not_starts_with: string | null
		parentId_ends_with: string | null
		parentId_not_ends_with: string | null
		url: string | null
		url_not: string | null
		url_in: string[]
		url_not_in: string[]
		url_lt: string | null
		url_lte: string | null
		url_gt: string | null
		url_gte: string | null
		url_contains: string | null
		url_not_contains: string | null
		url_starts_with: string | null
		url_not_starts_with: string | null
		url_ends_with: string | null
		url_not_ends_with: string | null
		filetype: string | null
		filetype_not: string | null
		filetype_in: string[]
		filetype_not_in: string[]
		filetype_lt: string | null
		filetype_lte: string | null
		filetype_gt: string | null
		filetype_gte: string | null
		filetype_contains: string | null
		filetype_not_contains: string | null
		filetype_starts_with: string | null
		filetype_not_starts_with: string | null
		filetype_ends_with: string | null
		filetype_not_ends_with: string | null
		author: UserWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		AND: MessageWhereInput[]
		OR: MessageWhereInput[]
		NOT: MessageWhereInput[]
	}

	export interface ArgsNotifications {
		where: NotificationWhereInput | null
		orderBy: NotificationOrderByInput | null
		skip: number | null
		after: string | null
		before: string | null
		first: number | null
		last: number | null
	}

	export interface ArgsDirectMessages {
		where: CommentWhereInput | null
		orderBy: CommentOrderByInput | null
		skip: number | null
		after: string | null
		before: string | null
		first: number | null
		last: number | null
	}

	export interface ArgsBlockedUsers {
		where: UserWhereInput | null
		orderBy: UserOrderByInput | null
		skip: number | null
		after: string | null
		before: string | null
		first: number | null
		last: number | null
	}

	export interface ArgsFriends {
		where: UserWhereInput | null
		orderBy: UserOrderByInput | null
		skip: number | null
		after: string | null
		before: string | null
		first: number | null
		last: number | null
	}

	export interface ArgsFriend_requests {
		where: UserWhereInput | null
		orderBy: UserOrderByInput | null
		skip: number | null
		after: string | null
		before: string | null
		first: number | null
		last: number | null
	}

	export interface ArgsTeams {
		where: TeamWhereInput | null
		orderBy: TeamOrderByInput | null
		skip: number | null
		after: string | null
		before: string | null
		first: number | null
		last: number | null
	}

	export interface ArgsChannels {
		where: ChannelWhereInput | null
		orderBy: ChannelOrderByInput | null
		skip: number | null
		after: string | null
		before: string | null
		first: number | null
		last: number | null
	}

	export interface ArgsOwned_teams {
		where: TeamWhereInput | null
		orderBy: TeamOrderByInput | null
		skip: number | null
		after: string | null
		before: string | null
		first: number | null
		last: number | null
	}

	export interface ArgsOwned_channels {
		where: ChannelWhereInput | null
		orderBy: ChannelOrderByInput | null
		skip: number | null
		after: string | null
		before: string | null
		first: number | null
		last: number | null
	}

	export type IdResolver = (
		parent: User,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type EmailResolver = (
		parent: User,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type NotificationsResolver = (
		parent: User,
		args: ArgsNotifications,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Notification[] | Promise<Notification[]>

	export type Set_privateResolver = (
		parent: User,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export type UsernameResolver = (
		parent: User,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type PasswordResolver = (
		parent: User,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type GitHubIdResolver = (
		parent: User,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | null | Promise<string | null>

	export type FacebookIdResolver = (
		parent: User,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | null | Promise<string | null>

	export type TwitterIdResolver = (
		parent: User,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | null | Promise<string | null>

	export type GmailIdResolver = (
		parent: User,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | null | Promise<string | null>

	export type DirectMessagesResolver = (
		parent: User,
		args: ArgsDirectMessages,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Comment[] | Promise<Comment[]>

	export type Avatar_urlResolver = (
		parent: User,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => File | Promise<File>

	export type PrivateResolver = (
		parent: User,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export type BlockedUsersResolver = (
		parent: User,
		args: ArgsBlockedUsers,
		ctx: Context,
		info: GraphQLResolveInfo
	) => User[] | Promise<User[]>

	export type ConfirmedResolver = (
		parent: User,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export type OnlineResolver = (
		parent: User,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export type FriendsResolver = (
		parent: User,
		args: ArgsFriends,
		ctx: Context,
		info: GraphQLResolveInfo
	) => User[] | Promise<User[]>

	export type Friend_requestsResolver = (
		parent: User,
		args: ArgsFriend_requests,
		ctx: Context,
		info: GraphQLResolveInfo
	) => User[] | Promise<User[]>

	export type CreatedAtResolver = (
		parent: User,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type UpdatedAtResolver = (
		parent: User,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type RoleResolver = (
		parent: User,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => UserRole | Promise<UserRole>

	export type TeamsResolver = (
		parent: User,
		args: ArgsTeams,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Team[] | Promise<Team[]>

	export type ChannelsResolver = (
		parent: User,
		args: ArgsChannels,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Channel[] | Promise<Channel[]>

	export type Owned_teamsResolver = (
		parent: User,
		args: ArgsOwned_teams,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Team[] | Promise<Team[]>

	export type Owned_channelsResolver = (
		parent: User,
		args: ArgsOwned_channels,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Channel[] | Promise<Channel[]>

	export interface Type {
		id: (
			parent: User,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		email: (
			parent: User,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		notifications: (
			parent: User,
			args: ArgsNotifications,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Notification[] | Promise<Notification[]>

		set_private: (
			parent: User,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>

		username: (
			parent: User,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		password: (
			parent: User,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		gitHubId: (
			parent: User,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | null | Promise<string | null>

		facebookId: (
			parent: User,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | null | Promise<string | null>

		twitterId: (
			parent: User,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | null | Promise<string | null>

		gmailId: (
			parent: User,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | null | Promise<string | null>

		directMessages: (
			parent: User,
			args: ArgsDirectMessages,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Comment[] | Promise<Comment[]>

		avatar_url: (
			parent: User,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => File | Promise<File>

		private: (
			parent: User,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>

		blockedUsers: (
			parent: User,
			args: ArgsBlockedUsers,
			ctx: Context,
			info: GraphQLResolveInfo
		) => User[] | Promise<User[]>

		confirmed: (
			parent: User,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>

		online: (
			parent: User,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>

		friends: (
			parent: User,
			args: ArgsFriends,
			ctx: Context,
			info: GraphQLResolveInfo
		) => User[] | Promise<User[]>

		friend_requests: (
			parent: User,
			args: ArgsFriend_requests,
			ctx: Context,
			info: GraphQLResolveInfo
		) => User[] | Promise<User[]>

		createdAt: (
			parent: User,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		updatedAt: (
			parent: User,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		role: (
			parent: User,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => UserRole | Promise<UserRole>

		teams: (
			parent: User,
			args: ArgsTeams,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Team[] | Promise<Team[]>

		channels: (
			parent: User,
			args: ArgsChannels,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Channel[] | Promise<Channel[]>

		owned_teams: (
			parent: User,
			args: ArgsOwned_teams,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Team[] | Promise<Team[]>

		owned_channels: (
			parent: User,
			args: ArgsOwned_channels,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Channel[] | Promise<Channel[]>
	}
}

export namespace CommentResolvers {
	export const defaultResolvers = {
		id: (parent: Comment) => parent.id,
		body: (parent: Comment) => parent.body,
		parentId: (parent: Comment) => parent.parentId,
		pageId: (parent: Comment) => parent.pageId,
		createdAt: (parent: Comment) => parent.createdAt,
		updatedAt: (parent: Comment) => parent.updatedAt
	}

	export interface CommentWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		body: string | null
		body_not: string | null
		body_in: string[]
		body_not_in: string[]
		body_lt: string | null
		body_lte: string | null
		body_gt: string | null
		body_gte: string | null
		body_contains: string | null
		body_not_contains: string | null
		body_starts_with: string | null
		body_not_starts_with: string | null
		body_ends_with: string | null
		body_not_ends_with: string | null
		parentId: string | null
		parentId_not: string | null
		parentId_in: string[]
		parentId_not_in: string[]
		parentId_lt: string | null
		parentId_lte: string | null
		parentId_gt: string | null
		parentId_gte: string | null
		parentId_contains: string | null
		parentId_not_contains: string | null
		parentId_starts_with: string | null
		parentId_not_starts_with: string | null
		parentId_ends_with: string | null
		parentId_not_ends_with: string | null
		pageId: string | null
		pageId_not: string | null
		pageId_in: string[]
		pageId_not_in: string[]
		pageId_lt: string | null
		pageId_lte: string | null
		pageId_gt: string | null
		pageId_gte: string | null
		pageId_contains: string | null
		pageId_not_contains: string | null
		pageId_starts_with: string | null
		pageId_not_starts_with: string | null
		pageId_ends_with: string | null
		pageId_not_ends_with: string | null
		repliedTo: UserWhereInput | null
		ratings: RatingWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		replies_every: CommentWhereInput | null
		replies_some: CommentWhereInput | null
		replies_none: CommentWhereInput | null
		author: UserWhereInput | null
		AND: CommentWhereInput[]
		OR: CommentWhereInput[]
		NOT: CommentWhereInput[]
	}
	export interface UserWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		email: string | null
		email_not: string | null
		email_in: string[]
		email_not_in: string[]
		email_lt: string | null
		email_lte: string | null
		email_gt: string | null
		email_gte: string | null
		email_contains: string | null
		email_not_contains: string | null
		email_starts_with: string | null
		email_not_starts_with: string | null
		email_ends_with: string | null
		email_not_ends_with: string | null
		notifications_every: NotificationWhereInput | null
		notifications_some: NotificationWhereInput | null
		notifications_none: NotificationWhereInput | null
		set_private: boolean | null
		set_private_not: boolean | null
		username: string | null
		username_not: string | null
		username_in: string[]
		username_not_in: string[]
		username_lt: string | null
		username_lte: string | null
		username_gt: string | null
		username_gte: string | null
		username_contains: string | null
		username_not_contains: string | null
		username_starts_with: string | null
		username_not_starts_with: string | null
		username_ends_with: string | null
		username_not_ends_with: string | null
		password: string | null
		password_not: string | null
		password_in: string[]
		password_not_in: string[]
		password_lt: string | null
		password_lte: string | null
		password_gt: string | null
		password_gte: string | null
		password_contains: string | null
		password_not_contains: string | null
		password_starts_with: string | null
		password_not_starts_with: string | null
		password_ends_with: string | null
		password_not_ends_with: string | null
		gitHubId: string | null
		gitHubId_not: string | null
		gitHubId_in: string[]
		gitHubId_not_in: string[]
		gitHubId_lt: string | null
		gitHubId_lte: string | null
		gitHubId_gt: string | null
		gitHubId_gte: string | null
		gitHubId_contains: string | null
		gitHubId_not_contains: string | null
		gitHubId_starts_with: string | null
		gitHubId_not_starts_with: string | null
		gitHubId_ends_with: string | null
		gitHubId_not_ends_with: string | null
		facebookId: string | null
		facebookId_not: string | null
		facebookId_in: string[]
		facebookId_not_in: string[]
		facebookId_lt: string | null
		facebookId_lte: string | null
		facebookId_gt: string | null
		facebookId_gte: string | null
		facebookId_contains: string | null
		facebookId_not_contains: string | null
		facebookId_starts_with: string | null
		facebookId_not_starts_with: string | null
		facebookId_ends_with: string | null
		facebookId_not_ends_with: string | null
		twitterId: string | null
		twitterId_not: string | null
		twitterId_in: string[]
		twitterId_not_in: string[]
		twitterId_lt: string | null
		twitterId_lte: string | null
		twitterId_gt: string | null
		twitterId_gte: string | null
		twitterId_contains: string | null
		twitterId_not_contains: string | null
		twitterId_starts_with: string | null
		twitterId_not_starts_with: string | null
		twitterId_ends_with: string | null
		twitterId_not_ends_with: string | null
		gmailId: string | null
		gmailId_not: string | null
		gmailId_in: string[]
		gmailId_not_in: string[]
		gmailId_lt: string | null
		gmailId_lte: string | null
		gmailId_gt: string | null
		gmailId_gte: string | null
		gmailId_contains: string | null
		gmailId_not_contains: string | null
		gmailId_starts_with: string | null
		gmailId_not_starts_with: string | null
		gmailId_ends_with: string | null
		gmailId_not_ends_with: string | null
		directMessages_every: CommentWhereInput | null
		directMessages_some: CommentWhereInput | null
		directMessages_none: CommentWhereInput | null
		avatar_url: FileWhereInput | null
		private: boolean | null
		private_not: boolean | null
		blockedUsers_every: UserWhereInput | null
		blockedUsers_some: UserWhereInput | null
		blockedUsers_none: UserWhereInput | null
		confirmed: boolean | null
		confirmed_not: boolean | null
		online: boolean | null
		online_not: boolean | null
		friends_every: UserWhereInput | null
		friends_some: UserWhereInput | null
		friends_none: UserWhereInput | null
		friend_requests_every: UserWhereInput | null
		friend_requests_some: UserWhereInput | null
		friend_requests_none: UserWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		role: UserRole | null
		role_not: UserRole | null
		role_in: UserRole[]
		role_not_in: UserRole[]
		teams_every: TeamWhereInput | null
		teams_some: TeamWhereInput | null
		teams_none: TeamWhereInput | null
		channels_every: ChannelWhereInput | null
		channels_some: ChannelWhereInput | null
		channels_none: ChannelWhereInput | null
		owned_teams_every: TeamWhereInput | null
		owned_teams_some: TeamWhereInput | null
		owned_teams_none: TeamWhereInput | null
		owned_channels_every: ChannelWhereInput | null
		owned_channels_some: ChannelWhereInput | null
		owned_channels_none: ChannelWhereInput | null
		AND: UserWhereInput[]
		OR: UserWhereInput[]
		NOT: UserWhereInput[]
	}
	export interface NotificationWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		message: string | null
		message_not: string | null
		message_in: string[]
		message_not_in: string[]
		message_lt: string | null
		message_lte: string | null
		message_gt: string | null
		message_gte: string | null
		message_contains: string | null
		message_not_contains: string | null
		message_starts_with: string | null
		message_not_starts_with: string | null
		message_ends_with: string | null
		message_not_ends_with: string | null
		author: UserWhereInput | null
		AND: NotificationWhereInput[]
		OR: NotificationWhereInput[]
		NOT: NotificationWhereInput[]
	}
	export interface RatingWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		vote: number | null
		vote_not: number | null
		vote_in: number[]
		vote_not_in: number[]
		vote_lt: number | null
		vote_lte: number | null
		vote_gt: number | null
		vote_gte: number | null
		author_every: UserWhereInput | null
		author_some: UserWhereInput | null
		author_none: UserWhereInput | null
		AND: RatingWhereInput[]
		OR: RatingWhereInput[]
		NOT: RatingWhereInput[]
	}
	export interface FileWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		filename: string | null
		filename_not: string | null
		filename_in: string[]
		filename_not_in: string[]
		filename_lt: string | null
		filename_lte: string | null
		filename_gt: string | null
		filename_gte: string | null
		filename_contains: string | null
		filename_not_contains: string | null
		filename_starts_with: string | null
		filename_not_starts_with: string | null
		filename_ends_with: string | null
		filename_not_ends_with: string | null
		mimetype: string | null
		mimetype_not: string | null
		mimetype_in: string[]
		mimetype_not_in: string[]
		mimetype_lt: string | null
		mimetype_lte: string | null
		mimetype_gt: string | null
		mimetype_gte: string | null
		mimetype_contains: string | null
		mimetype_not_contains: string | null
		mimetype_starts_with: string | null
		mimetype_not_starts_with: string | null
		mimetype_ends_with: string | null
		mimetype_not_ends_with: string | null
		encoding: string | null
		encoding_not: string | null
		encoding_in: string[]
		encoding_not_in: string[]
		encoding_lt: string | null
		encoding_lte: string | null
		encoding_gt: string | null
		encoding_gte: string | null
		encoding_contains: string | null
		encoding_not_contains: string | null
		encoding_starts_with: string | null
		encoding_not_starts_with: string | null
		encoding_ends_with: string | null
		encoding_not_ends_with: string | null
		key: string | null
		key_not: string | null
		key_in: string[]
		key_not_in: string[]
		key_lt: string | null
		key_lte: string | null
		key_gt: string | null
		key_gte: string | null
		key_contains: string | null
		key_not_contains: string | null
		key_starts_with: string | null
		key_not_starts_with: string | null
		key_ends_with: string | null
		key_not_ends_with: string | null
		ETag: string | null
		ETag_not: string | null
		ETag_in: string[]
		ETag_not_in: string[]
		ETag_lt: string | null
		ETag_lte: string | null
		ETag_gt: string | null
		ETag_gte: string | null
		ETag_contains: string | null
		ETag_not_contains: string | null
		ETag_starts_with: string | null
		ETag_not_starts_with: string | null
		ETag_ends_with: string | null
		ETag_not_ends_with: string | null
		url: string | null
		url_not: string | null
		url_in: string[]
		url_not_in: string[]
		url_lt: string | null
		url_lte: string | null
		url_gt: string | null
		url_gte: string | null
		url_contains: string | null
		url_not_contains: string | null
		url_starts_with: string | null
		url_not_starts_with: string | null
		url_ends_with: string | null
		url_not_ends_with: string | null
		AND: FileWhereInput[]
		OR: FileWhereInput[]
		NOT: FileWhereInput[]
	}
	export interface TeamWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		name: string | null
		name_not: string | null
		name_in: string[]
		name_not_in: string[]
		name_lt: string | null
		name_lte: string | null
		name_gt: string | null
		name_gte: string | null
		name_contains: string | null
		name_not_contains: string | null
		name_starts_with: string | null
		name_not_starts_with: string | null
		name_ends_with: string | null
		name_not_ends_with: string | null
		slug: string | null
		slug_not: string | null
		slug_in: string[]
		slug_not_in: string[]
		slug_lt: string | null
		slug_lte: string | null
		slug_gt: string | null
		slug_gte: string | null
		slug_contains: string | null
		slug_not_contains: string | null
		slug_starts_with: string | null
		slug_not_starts_with: string | null
		slug_ends_with: string | null
		slug_not_ends_with: string | null
		moderators_every: UserWhereInput | null
		moderators_some: UserWhereInput | null
		moderators_none: UserWhereInput | null
		author: UserWhereInput | null
		members_every: UserWhereInput | null
		members_some: UserWhereInput | null
		members_none: UserWhereInput | null
		channels_every: ChannelWhereInput | null
		channels_some: ChannelWhereInput | null
		channels_none: ChannelWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		confirmed: boolean | null
		confirmed_not: boolean | null
		online: boolean | null
		online_not: boolean | null
		AND: TeamWhereInput[]
		OR: TeamWhereInput[]
		NOT: TeamWhereInput[]
	}
	export interface ChannelWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		name: string | null
		name_not: string | null
		name_in: string[]
		name_not_in: string[]
		name_lt: string | null
		name_lte: string | null
		name_gt: string | null
		name_gte: string | null
		name_contains: string | null
		name_not_contains: string | null
		name_starts_with: string | null
		name_not_starts_with: string | null
		name_ends_with: string | null
		name_not_ends_with: string | null
		slug: string | null
		slug_not: string | null
		slug_in: string[]
		slug_not_in: string[]
		slug_lt: string | null
		slug_lte: string | null
		slug_gt: string | null
		slug_gte: string | null
		slug_contains: string | null
		slug_not_contains: string | null
		slug_starts_with: string | null
		slug_not_starts_with: string | null
		slug_ends_with: string | null
		slug_not_ends_with: string | null
		moderators_every: UserWhereInput | null
		moderators_some: UserWhereInput | null
		moderators_none: UserWhereInput | null
		public: boolean | null
		public_not: boolean | null
		messages_every: MessageWhereInput | null
		messages_some: MessageWhereInput | null
		messages_none: MessageWhereInput | null
		members_every: UserWhereInput | null
		members_some: UserWhereInput | null
		members_none: UserWhereInput | null
		author: UserWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		AND: ChannelWhereInput[]
		OR: ChannelWhereInput[]
		NOT: ChannelWhereInput[]
	}
	export interface MessageWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		body: string | null
		body_not: string | null
		body_in: string[]
		body_not_in: string[]
		body_lt: string | null
		body_lte: string | null
		body_gt: string | null
		body_gte: string | null
		body_contains: string | null
		body_not_contains: string | null
		body_starts_with: string | null
		body_not_starts_with: string | null
		body_ends_with: string | null
		body_not_ends_with: string | null
		parentId: string | null
		parentId_not: string | null
		parentId_in: string[]
		parentId_not_in: string[]
		parentId_lt: string | null
		parentId_lte: string | null
		parentId_gt: string | null
		parentId_gte: string | null
		parentId_contains: string | null
		parentId_not_contains: string | null
		parentId_starts_with: string | null
		parentId_not_starts_with: string | null
		parentId_ends_with: string | null
		parentId_not_ends_with: string | null
		url: string | null
		url_not: string | null
		url_in: string[]
		url_not_in: string[]
		url_lt: string | null
		url_lte: string | null
		url_gt: string | null
		url_gte: string | null
		url_contains: string | null
		url_not_contains: string | null
		url_starts_with: string | null
		url_not_starts_with: string | null
		url_ends_with: string | null
		url_not_ends_with: string | null
		filetype: string | null
		filetype_not: string | null
		filetype_in: string[]
		filetype_not_in: string[]
		filetype_lt: string | null
		filetype_lte: string | null
		filetype_gt: string | null
		filetype_gte: string | null
		filetype_contains: string | null
		filetype_not_contains: string | null
		filetype_starts_with: string | null
		filetype_not_starts_with: string | null
		filetype_ends_with: string | null
		filetype_not_ends_with: string | null
		author: UserWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		AND: MessageWhereInput[]
		OR: MessageWhereInput[]
		NOT: MessageWhereInput[]
	}

	export interface ArgsReplies {
		where: CommentWhereInput | null
		orderBy: CommentOrderByInput | null
		skip: number | null
		after: string | null
		before: string | null
		first: number | null
		last: number | null
	}

	export type IdResolver = (
		parent: Comment,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type BodyResolver = (
		parent: Comment,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type ParentIdResolver = (
		parent: Comment,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type PageIdResolver = (
		parent: Comment,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type RepliedToResolver = (
		parent: Comment,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => User | null | Promise<User | null>

	export type RatingsResolver = (
		parent: Comment,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => Rating | Promise<Rating>

	export type CreatedAtResolver = (
		parent: Comment,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type UpdatedAtResolver = (
		parent: Comment,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type RepliesResolver = (
		parent: Comment,
		args: ArgsReplies,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Comment[] | Promise<Comment[]>

	export type AuthorResolver = (
		parent: Comment,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => User | Promise<User>

	export interface Type {
		id: (
			parent: Comment,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		body: (
			parent: Comment,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		parentId: (
			parent: Comment,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		pageId: (
			parent: Comment,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		repliedTo: (
			parent: Comment,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => User | null | Promise<User | null>

		ratings: (
			parent: Comment,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => Rating | Promise<Rating>

		createdAt: (
			parent: Comment,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		updatedAt: (
			parent: Comment,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		replies: (
			parent: Comment,
			args: ArgsReplies,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Comment[] | Promise<Comment[]>

		author: (
			parent: Comment,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => User | Promise<User>
	}
}

export namespace RatingResolvers {
	export const defaultResolvers = {
		id: (parent: Rating) => parent.id,
		vote: (parent: Rating) => parent.vote
	}

	export interface UserWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		email: string | null
		email_not: string | null
		email_in: string[]
		email_not_in: string[]
		email_lt: string | null
		email_lte: string | null
		email_gt: string | null
		email_gte: string | null
		email_contains: string | null
		email_not_contains: string | null
		email_starts_with: string | null
		email_not_starts_with: string | null
		email_ends_with: string | null
		email_not_ends_with: string | null
		notifications_every: NotificationWhereInput | null
		notifications_some: NotificationWhereInput | null
		notifications_none: NotificationWhereInput | null
		set_private: boolean | null
		set_private_not: boolean | null
		username: string | null
		username_not: string | null
		username_in: string[]
		username_not_in: string[]
		username_lt: string | null
		username_lte: string | null
		username_gt: string | null
		username_gte: string | null
		username_contains: string | null
		username_not_contains: string | null
		username_starts_with: string | null
		username_not_starts_with: string | null
		username_ends_with: string | null
		username_not_ends_with: string | null
		password: string | null
		password_not: string | null
		password_in: string[]
		password_not_in: string[]
		password_lt: string | null
		password_lte: string | null
		password_gt: string | null
		password_gte: string | null
		password_contains: string | null
		password_not_contains: string | null
		password_starts_with: string | null
		password_not_starts_with: string | null
		password_ends_with: string | null
		password_not_ends_with: string | null
		gitHubId: string | null
		gitHubId_not: string | null
		gitHubId_in: string[]
		gitHubId_not_in: string[]
		gitHubId_lt: string | null
		gitHubId_lte: string | null
		gitHubId_gt: string | null
		gitHubId_gte: string | null
		gitHubId_contains: string | null
		gitHubId_not_contains: string | null
		gitHubId_starts_with: string | null
		gitHubId_not_starts_with: string | null
		gitHubId_ends_with: string | null
		gitHubId_not_ends_with: string | null
		facebookId: string | null
		facebookId_not: string | null
		facebookId_in: string[]
		facebookId_not_in: string[]
		facebookId_lt: string | null
		facebookId_lte: string | null
		facebookId_gt: string | null
		facebookId_gte: string | null
		facebookId_contains: string | null
		facebookId_not_contains: string | null
		facebookId_starts_with: string | null
		facebookId_not_starts_with: string | null
		facebookId_ends_with: string | null
		facebookId_not_ends_with: string | null
		twitterId: string | null
		twitterId_not: string | null
		twitterId_in: string[]
		twitterId_not_in: string[]
		twitterId_lt: string | null
		twitterId_lte: string | null
		twitterId_gt: string | null
		twitterId_gte: string | null
		twitterId_contains: string | null
		twitterId_not_contains: string | null
		twitterId_starts_with: string | null
		twitterId_not_starts_with: string | null
		twitterId_ends_with: string | null
		twitterId_not_ends_with: string | null
		gmailId: string | null
		gmailId_not: string | null
		gmailId_in: string[]
		gmailId_not_in: string[]
		gmailId_lt: string | null
		gmailId_lte: string | null
		gmailId_gt: string | null
		gmailId_gte: string | null
		gmailId_contains: string | null
		gmailId_not_contains: string | null
		gmailId_starts_with: string | null
		gmailId_not_starts_with: string | null
		gmailId_ends_with: string | null
		gmailId_not_ends_with: string | null
		directMessages_every: CommentWhereInput | null
		directMessages_some: CommentWhereInput | null
		directMessages_none: CommentWhereInput | null
		avatar_url: FileWhereInput | null
		private: boolean | null
		private_not: boolean | null
		blockedUsers_every: UserWhereInput | null
		blockedUsers_some: UserWhereInput | null
		blockedUsers_none: UserWhereInput | null
		confirmed: boolean | null
		confirmed_not: boolean | null
		online: boolean | null
		online_not: boolean | null
		friends_every: UserWhereInput | null
		friends_some: UserWhereInput | null
		friends_none: UserWhereInput | null
		friend_requests_every: UserWhereInput | null
		friend_requests_some: UserWhereInput | null
		friend_requests_none: UserWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		role: UserRole | null
		role_not: UserRole | null
		role_in: UserRole[]
		role_not_in: UserRole[]
		teams_every: TeamWhereInput | null
		teams_some: TeamWhereInput | null
		teams_none: TeamWhereInput | null
		channels_every: ChannelWhereInput | null
		channels_some: ChannelWhereInput | null
		channels_none: ChannelWhereInput | null
		owned_teams_every: TeamWhereInput | null
		owned_teams_some: TeamWhereInput | null
		owned_teams_none: TeamWhereInput | null
		owned_channels_every: ChannelWhereInput | null
		owned_channels_some: ChannelWhereInput | null
		owned_channels_none: ChannelWhereInput | null
		AND: UserWhereInput[]
		OR: UserWhereInput[]
		NOT: UserWhereInput[]
	}
	export interface NotificationWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		message: string | null
		message_not: string | null
		message_in: string[]
		message_not_in: string[]
		message_lt: string | null
		message_lte: string | null
		message_gt: string | null
		message_gte: string | null
		message_contains: string | null
		message_not_contains: string | null
		message_starts_with: string | null
		message_not_starts_with: string | null
		message_ends_with: string | null
		message_not_ends_with: string | null
		author: UserWhereInput | null
		AND: NotificationWhereInput[]
		OR: NotificationWhereInput[]
		NOT: NotificationWhereInput[]
	}
	export interface CommentWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		body: string | null
		body_not: string | null
		body_in: string[]
		body_not_in: string[]
		body_lt: string | null
		body_lte: string | null
		body_gt: string | null
		body_gte: string | null
		body_contains: string | null
		body_not_contains: string | null
		body_starts_with: string | null
		body_not_starts_with: string | null
		body_ends_with: string | null
		body_not_ends_with: string | null
		parentId: string | null
		parentId_not: string | null
		parentId_in: string[]
		parentId_not_in: string[]
		parentId_lt: string | null
		parentId_lte: string | null
		parentId_gt: string | null
		parentId_gte: string | null
		parentId_contains: string | null
		parentId_not_contains: string | null
		parentId_starts_with: string | null
		parentId_not_starts_with: string | null
		parentId_ends_with: string | null
		parentId_not_ends_with: string | null
		pageId: string | null
		pageId_not: string | null
		pageId_in: string[]
		pageId_not_in: string[]
		pageId_lt: string | null
		pageId_lte: string | null
		pageId_gt: string | null
		pageId_gte: string | null
		pageId_contains: string | null
		pageId_not_contains: string | null
		pageId_starts_with: string | null
		pageId_not_starts_with: string | null
		pageId_ends_with: string | null
		pageId_not_ends_with: string | null
		repliedTo: UserWhereInput | null
		ratings: RatingWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		replies_every: CommentWhereInput | null
		replies_some: CommentWhereInput | null
		replies_none: CommentWhereInput | null
		author: UserWhereInput | null
		AND: CommentWhereInput[]
		OR: CommentWhereInput[]
		NOT: CommentWhereInput[]
	}
	export interface RatingWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		vote: number | null
		vote_not: number | null
		vote_in: number[]
		vote_not_in: number[]
		vote_lt: number | null
		vote_lte: number | null
		vote_gt: number | null
		vote_gte: number | null
		author_every: UserWhereInput | null
		author_some: UserWhereInput | null
		author_none: UserWhereInput | null
		AND: RatingWhereInput[]
		OR: RatingWhereInput[]
		NOT: RatingWhereInput[]
	}
	export interface FileWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		filename: string | null
		filename_not: string | null
		filename_in: string[]
		filename_not_in: string[]
		filename_lt: string | null
		filename_lte: string | null
		filename_gt: string | null
		filename_gte: string | null
		filename_contains: string | null
		filename_not_contains: string | null
		filename_starts_with: string | null
		filename_not_starts_with: string | null
		filename_ends_with: string | null
		filename_not_ends_with: string | null
		mimetype: string | null
		mimetype_not: string | null
		mimetype_in: string[]
		mimetype_not_in: string[]
		mimetype_lt: string | null
		mimetype_lte: string | null
		mimetype_gt: string | null
		mimetype_gte: string | null
		mimetype_contains: string | null
		mimetype_not_contains: string | null
		mimetype_starts_with: string | null
		mimetype_not_starts_with: string | null
		mimetype_ends_with: string | null
		mimetype_not_ends_with: string | null
		encoding: string | null
		encoding_not: string | null
		encoding_in: string[]
		encoding_not_in: string[]
		encoding_lt: string | null
		encoding_lte: string | null
		encoding_gt: string | null
		encoding_gte: string | null
		encoding_contains: string | null
		encoding_not_contains: string | null
		encoding_starts_with: string | null
		encoding_not_starts_with: string | null
		encoding_ends_with: string | null
		encoding_not_ends_with: string | null
		key: string | null
		key_not: string | null
		key_in: string[]
		key_not_in: string[]
		key_lt: string | null
		key_lte: string | null
		key_gt: string | null
		key_gte: string | null
		key_contains: string | null
		key_not_contains: string | null
		key_starts_with: string | null
		key_not_starts_with: string | null
		key_ends_with: string | null
		key_not_ends_with: string | null
		ETag: string | null
		ETag_not: string | null
		ETag_in: string[]
		ETag_not_in: string[]
		ETag_lt: string | null
		ETag_lte: string | null
		ETag_gt: string | null
		ETag_gte: string | null
		ETag_contains: string | null
		ETag_not_contains: string | null
		ETag_starts_with: string | null
		ETag_not_starts_with: string | null
		ETag_ends_with: string | null
		ETag_not_ends_with: string | null
		url: string | null
		url_not: string | null
		url_in: string[]
		url_not_in: string[]
		url_lt: string | null
		url_lte: string | null
		url_gt: string | null
		url_gte: string | null
		url_contains: string | null
		url_not_contains: string | null
		url_starts_with: string | null
		url_not_starts_with: string | null
		url_ends_with: string | null
		url_not_ends_with: string | null
		AND: FileWhereInput[]
		OR: FileWhereInput[]
		NOT: FileWhereInput[]
	}
	export interface TeamWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		name: string | null
		name_not: string | null
		name_in: string[]
		name_not_in: string[]
		name_lt: string | null
		name_lte: string | null
		name_gt: string | null
		name_gte: string | null
		name_contains: string | null
		name_not_contains: string | null
		name_starts_with: string | null
		name_not_starts_with: string | null
		name_ends_with: string | null
		name_not_ends_with: string | null
		slug: string | null
		slug_not: string | null
		slug_in: string[]
		slug_not_in: string[]
		slug_lt: string | null
		slug_lte: string | null
		slug_gt: string | null
		slug_gte: string | null
		slug_contains: string | null
		slug_not_contains: string | null
		slug_starts_with: string | null
		slug_not_starts_with: string | null
		slug_ends_with: string | null
		slug_not_ends_with: string | null
		moderators_every: UserWhereInput | null
		moderators_some: UserWhereInput | null
		moderators_none: UserWhereInput | null
		author: UserWhereInput | null
		members_every: UserWhereInput | null
		members_some: UserWhereInput | null
		members_none: UserWhereInput | null
		channels_every: ChannelWhereInput | null
		channels_some: ChannelWhereInput | null
		channels_none: ChannelWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		confirmed: boolean | null
		confirmed_not: boolean | null
		online: boolean | null
		online_not: boolean | null
		AND: TeamWhereInput[]
		OR: TeamWhereInput[]
		NOT: TeamWhereInput[]
	}
	export interface ChannelWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		name: string | null
		name_not: string | null
		name_in: string[]
		name_not_in: string[]
		name_lt: string | null
		name_lte: string | null
		name_gt: string | null
		name_gte: string | null
		name_contains: string | null
		name_not_contains: string | null
		name_starts_with: string | null
		name_not_starts_with: string | null
		name_ends_with: string | null
		name_not_ends_with: string | null
		slug: string | null
		slug_not: string | null
		slug_in: string[]
		slug_not_in: string[]
		slug_lt: string | null
		slug_lte: string | null
		slug_gt: string | null
		slug_gte: string | null
		slug_contains: string | null
		slug_not_contains: string | null
		slug_starts_with: string | null
		slug_not_starts_with: string | null
		slug_ends_with: string | null
		slug_not_ends_with: string | null
		moderators_every: UserWhereInput | null
		moderators_some: UserWhereInput | null
		moderators_none: UserWhereInput | null
		public: boolean | null
		public_not: boolean | null
		messages_every: MessageWhereInput | null
		messages_some: MessageWhereInput | null
		messages_none: MessageWhereInput | null
		members_every: UserWhereInput | null
		members_some: UserWhereInput | null
		members_none: UserWhereInput | null
		author: UserWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		AND: ChannelWhereInput[]
		OR: ChannelWhereInput[]
		NOT: ChannelWhereInput[]
	}
	export interface MessageWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		body: string | null
		body_not: string | null
		body_in: string[]
		body_not_in: string[]
		body_lt: string | null
		body_lte: string | null
		body_gt: string | null
		body_gte: string | null
		body_contains: string | null
		body_not_contains: string | null
		body_starts_with: string | null
		body_not_starts_with: string | null
		body_ends_with: string | null
		body_not_ends_with: string | null
		parentId: string | null
		parentId_not: string | null
		parentId_in: string[]
		parentId_not_in: string[]
		parentId_lt: string | null
		parentId_lte: string | null
		parentId_gt: string | null
		parentId_gte: string | null
		parentId_contains: string | null
		parentId_not_contains: string | null
		parentId_starts_with: string | null
		parentId_not_starts_with: string | null
		parentId_ends_with: string | null
		parentId_not_ends_with: string | null
		url: string | null
		url_not: string | null
		url_in: string[]
		url_not_in: string[]
		url_lt: string | null
		url_lte: string | null
		url_gt: string | null
		url_gte: string | null
		url_contains: string | null
		url_not_contains: string | null
		url_starts_with: string | null
		url_not_starts_with: string | null
		url_ends_with: string | null
		url_not_ends_with: string | null
		filetype: string | null
		filetype_not: string | null
		filetype_in: string[]
		filetype_not_in: string[]
		filetype_lt: string | null
		filetype_lte: string | null
		filetype_gt: string | null
		filetype_gte: string | null
		filetype_contains: string | null
		filetype_not_contains: string | null
		filetype_starts_with: string | null
		filetype_not_starts_with: string | null
		filetype_ends_with: string | null
		filetype_not_ends_with: string | null
		author: UserWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		AND: MessageWhereInput[]
		OR: MessageWhereInput[]
		NOT: MessageWhereInput[]
	}

	export interface ArgsAuthor {
		where: UserWhereInput | null
		orderBy: UserOrderByInput | null
		skip: number | null
		after: string | null
		before: string | null
		first: number | null
		last: number | null
	}

	export type IdResolver = (
		parent: Rating,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type VoteResolver = (
		parent: Rating,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => number | Promise<number>

	export type AuthorResolver = (
		parent: Rating,
		args: ArgsAuthor,
		ctx: Context,
		info: GraphQLResolveInfo
	) => User[] | Promise<User[]>

	export interface Type {
		id: (
			parent: Rating,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		vote: (
			parent: Rating,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => number | Promise<number>

		author: (
			parent: Rating,
			args: ArgsAuthor,
			ctx: Context,
			info: GraphQLResolveInfo
		) => User[] | Promise<User[]>
	}
}

export namespace FileResolvers {
	export const defaultResolvers = {
		id: (parent: File) => parent.id,
		createdAt: (parent: File) => parent.createdAt,
		updatedAt: (parent: File) => parent.updatedAt,
		filename: (parent: File) => parent.filename,
		mimetype: (parent: File) => parent.mimetype,
		encoding: (parent: File) => parent.encoding,
		key: (parent: File) => parent.key,
		ETag: (parent: File) => parent.ETag,
		url: (parent: File) => parent.url
	}

	export type IdResolver = (
		parent: File,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type CreatedAtResolver = (
		parent: File,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type UpdatedAtResolver = (
		parent: File,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type FilenameResolver = (
		parent: File,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type MimetypeResolver = (
		parent: File,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type EncodingResolver = (
		parent: File,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type KeyResolver = (
		parent: File,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type ETagResolver = (
		parent: File,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type UrlResolver = (
		parent: File,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export interface Type {
		id: (
			parent: File,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		createdAt: (
			parent: File,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		updatedAt: (
			parent: File,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		filename: (
			parent: File,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		mimetype: (
			parent: File,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		encoding: (
			parent: File,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		key: (
			parent: File,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		ETag: (
			parent: File,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		url: (
			parent: File,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>
	}
}

export namespace TeamResolvers {
	export const defaultResolvers = {
		id: (parent: Team) => parent.id,
		name: (parent: Team) => parent.name,
		slug: (parent: Team) => parent.slug,
		createdAt: (parent: Team) => parent.createdAt,
		updatedAt: (parent: Team) => parent.updatedAt,
		confirmed: (parent: Team) => parent.confirmed,
		online: (parent: Team) => parent.online
	}

	export interface UserWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		email: string | null
		email_not: string | null
		email_in: string[]
		email_not_in: string[]
		email_lt: string | null
		email_lte: string | null
		email_gt: string | null
		email_gte: string | null
		email_contains: string | null
		email_not_contains: string | null
		email_starts_with: string | null
		email_not_starts_with: string | null
		email_ends_with: string | null
		email_not_ends_with: string | null
		notifications_every: NotificationWhereInput | null
		notifications_some: NotificationWhereInput | null
		notifications_none: NotificationWhereInput | null
		set_private: boolean | null
		set_private_not: boolean | null
		username: string | null
		username_not: string | null
		username_in: string[]
		username_not_in: string[]
		username_lt: string | null
		username_lte: string | null
		username_gt: string | null
		username_gte: string | null
		username_contains: string | null
		username_not_contains: string | null
		username_starts_with: string | null
		username_not_starts_with: string | null
		username_ends_with: string | null
		username_not_ends_with: string | null
		password: string | null
		password_not: string | null
		password_in: string[]
		password_not_in: string[]
		password_lt: string | null
		password_lte: string | null
		password_gt: string | null
		password_gte: string | null
		password_contains: string | null
		password_not_contains: string | null
		password_starts_with: string | null
		password_not_starts_with: string | null
		password_ends_with: string | null
		password_not_ends_with: string | null
		gitHubId: string | null
		gitHubId_not: string | null
		gitHubId_in: string[]
		gitHubId_not_in: string[]
		gitHubId_lt: string | null
		gitHubId_lte: string | null
		gitHubId_gt: string | null
		gitHubId_gte: string | null
		gitHubId_contains: string | null
		gitHubId_not_contains: string | null
		gitHubId_starts_with: string | null
		gitHubId_not_starts_with: string | null
		gitHubId_ends_with: string | null
		gitHubId_not_ends_with: string | null
		facebookId: string | null
		facebookId_not: string | null
		facebookId_in: string[]
		facebookId_not_in: string[]
		facebookId_lt: string | null
		facebookId_lte: string | null
		facebookId_gt: string | null
		facebookId_gte: string | null
		facebookId_contains: string | null
		facebookId_not_contains: string | null
		facebookId_starts_with: string | null
		facebookId_not_starts_with: string | null
		facebookId_ends_with: string | null
		facebookId_not_ends_with: string | null
		twitterId: string | null
		twitterId_not: string | null
		twitterId_in: string[]
		twitterId_not_in: string[]
		twitterId_lt: string | null
		twitterId_lte: string | null
		twitterId_gt: string | null
		twitterId_gte: string | null
		twitterId_contains: string | null
		twitterId_not_contains: string | null
		twitterId_starts_with: string | null
		twitterId_not_starts_with: string | null
		twitterId_ends_with: string | null
		twitterId_not_ends_with: string | null
		gmailId: string | null
		gmailId_not: string | null
		gmailId_in: string[]
		gmailId_not_in: string[]
		gmailId_lt: string | null
		gmailId_lte: string | null
		gmailId_gt: string | null
		gmailId_gte: string | null
		gmailId_contains: string | null
		gmailId_not_contains: string | null
		gmailId_starts_with: string | null
		gmailId_not_starts_with: string | null
		gmailId_ends_with: string | null
		gmailId_not_ends_with: string | null
		directMessages_every: CommentWhereInput | null
		directMessages_some: CommentWhereInput | null
		directMessages_none: CommentWhereInput | null
		avatar_url: FileWhereInput | null
		private: boolean | null
		private_not: boolean | null
		blockedUsers_every: UserWhereInput | null
		blockedUsers_some: UserWhereInput | null
		blockedUsers_none: UserWhereInput | null
		confirmed: boolean | null
		confirmed_not: boolean | null
		online: boolean | null
		online_not: boolean | null
		friends_every: UserWhereInput | null
		friends_some: UserWhereInput | null
		friends_none: UserWhereInput | null
		friend_requests_every: UserWhereInput | null
		friend_requests_some: UserWhereInput | null
		friend_requests_none: UserWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		role: UserRole | null
		role_not: UserRole | null
		role_in: UserRole[]
		role_not_in: UserRole[]
		teams_every: TeamWhereInput | null
		teams_some: TeamWhereInput | null
		teams_none: TeamWhereInput | null
		channels_every: ChannelWhereInput | null
		channels_some: ChannelWhereInput | null
		channels_none: ChannelWhereInput | null
		owned_teams_every: TeamWhereInput | null
		owned_teams_some: TeamWhereInput | null
		owned_teams_none: TeamWhereInput | null
		owned_channels_every: ChannelWhereInput | null
		owned_channels_some: ChannelWhereInput | null
		owned_channels_none: ChannelWhereInput | null
		AND: UserWhereInput[]
		OR: UserWhereInput[]
		NOT: UserWhereInput[]
	}
	export interface NotificationWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		message: string | null
		message_not: string | null
		message_in: string[]
		message_not_in: string[]
		message_lt: string | null
		message_lte: string | null
		message_gt: string | null
		message_gte: string | null
		message_contains: string | null
		message_not_contains: string | null
		message_starts_with: string | null
		message_not_starts_with: string | null
		message_ends_with: string | null
		message_not_ends_with: string | null
		author: UserWhereInput | null
		AND: NotificationWhereInput[]
		OR: NotificationWhereInput[]
		NOT: NotificationWhereInput[]
	}
	export interface CommentWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		body: string | null
		body_not: string | null
		body_in: string[]
		body_not_in: string[]
		body_lt: string | null
		body_lte: string | null
		body_gt: string | null
		body_gte: string | null
		body_contains: string | null
		body_not_contains: string | null
		body_starts_with: string | null
		body_not_starts_with: string | null
		body_ends_with: string | null
		body_not_ends_with: string | null
		parentId: string | null
		parentId_not: string | null
		parentId_in: string[]
		parentId_not_in: string[]
		parentId_lt: string | null
		parentId_lte: string | null
		parentId_gt: string | null
		parentId_gte: string | null
		parentId_contains: string | null
		parentId_not_contains: string | null
		parentId_starts_with: string | null
		parentId_not_starts_with: string | null
		parentId_ends_with: string | null
		parentId_not_ends_with: string | null
		pageId: string | null
		pageId_not: string | null
		pageId_in: string[]
		pageId_not_in: string[]
		pageId_lt: string | null
		pageId_lte: string | null
		pageId_gt: string | null
		pageId_gte: string | null
		pageId_contains: string | null
		pageId_not_contains: string | null
		pageId_starts_with: string | null
		pageId_not_starts_with: string | null
		pageId_ends_with: string | null
		pageId_not_ends_with: string | null
		repliedTo: UserWhereInput | null
		ratings: RatingWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		replies_every: CommentWhereInput | null
		replies_some: CommentWhereInput | null
		replies_none: CommentWhereInput | null
		author: UserWhereInput | null
		AND: CommentWhereInput[]
		OR: CommentWhereInput[]
		NOT: CommentWhereInput[]
	}
	export interface RatingWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		vote: number | null
		vote_not: number | null
		vote_in: number[]
		vote_not_in: number[]
		vote_lt: number | null
		vote_lte: number | null
		vote_gt: number | null
		vote_gte: number | null
		author_every: UserWhereInput | null
		author_some: UserWhereInput | null
		author_none: UserWhereInput | null
		AND: RatingWhereInput[]
		OR: RatingWhereInput[]
		NOT: RatingWhereInput[]
	}
	export interface FileWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		filename: string | null
		filename_not: string | null
		filename_in: string[]
		filename_not_in: string[]
		filename_lt: string | null
		filename_lte: string | null
		filename_gt: string | null
		filename_gte: string | null
		filename_contains: string | null
		filename_not_contains: string | null
		filename_starts_with: string | null
		filename_not_starts_with: string | null
		filename_ends_with: string | null
		filename_not_ends_with: string | null
		mimetype: string | null
		mimetype_not: string | null
		mimetype_in: string[]
		mimetype_not_in: string[]
		mimetype_lt: string | null
		mimetype_lte: string | null
		mimetype_gt: string | null
		mimetype_gte: string | null
		mimetype_contains: string | null
		mimetype_not_contains: string | null
		mimetype_starts_with: string | null
		mimetype_not_starts_with: string | null
		mimetype_ends_with: string | null
		mimetype_not_ends_with: string | null
		encoding: string | null
		encoding_not: string | null
		encoding_in: string[]
		encoding_not_in: string[]
		encoding_lt: string | null
		encoding_lte: string | null
		encoding_gt: string | null
		encoding_gte: string | null
		encoding_contains: string | null
		encoding_not_contains: string | null
		encoding_starts_with: string | null
		encoding_not_starts_with: string | null
		encoding_ends_with: string | null
		encoding_not_ends_with: string | null
		key: string | null
		key_not: string | null
		key_in: string[]
		key_not_in: string[]
		key_lt: string | null
		key_lte: string | null
		key_gt: string | null
		key_gte: string | null
		key_contains: string | null
		key_not_contains: string | null
		key_starts_with: string | null
		key_not_starts_with: string | null
		key_ends_with: string | null
		key_not_ends_with: string | null
		ETag: string | null
		ETag_not: string | null
		ETag_in: string[]
		ETag_not_in: string[]
		ETag_lt: string | null
		ETag_lte: string | null
		ETag_gt: string | null
		ETag_gte: string | null
		ETag_contains: string | null
		ETag_not_contains: string | null
		ETag_starts_with: string | null
		ETag_not_starts_with: string | null
		ETag_ends_with: string | null
		ETag_not_ends_with: string | null
		url: string | null
		url_not: string | null
		url_in: string[]
		url_not_in: string[]
		url_lt: string | null
		url_lte: string | null
		url_gt: string | null
		url_gte: string | null
		url_contains: string | null
		url_not_contains: string | null
		url_starts_with: string | null
		url_not_starts_with: string | null
		url_ends_with: string | null
		url_not_ends_with: string | null
		AND: FileWhereInput[]
		OR: FileWhereInput[]
		NOT: FileWhereInput[]
	}
	export interface TeamWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		name: string | null
		name_not: string | null
		name_in: string[]
		name_not_in: string[]
		name_lt: string | null
		name_lte: string | null
		name_gt: string | null
		name_gte: string | null
		name_contains: string | null
		name_not_contains: string | null
		name_starts_with: string | null
		name_not_starts_with: string | null
		name_ends_with: string | null
		name_not_ends_with: string | null
		slug: string | null
		slug_not: string | null
		slug_in: string[]
		slug_not_in: string[]
		slug_lt: string | null
		slug_lte: string | null
		slug_gt: string | null
		slug_gte: string | null
		slug_contains: string | null
		slug_not_contains: string | null
		slug_starts_with: string | null
		slug_not_starts_with: string | null
		slug_ends_with: string | null
		slug_not_ends_with: string | null
		moderators_every: UserWhereInput | null
		moderators_some: UserWhereInput | null
		moderators_none: UserWhereInput | null
		author: UserWhereInput | null
		members_every: UserWhereInput | null
		members_some: UserWhereInput | null
		members_none: UserWhereInput | null
		channels_every: ChannelWhereInput | null
		channels_some: ChannelWhereInput | null
		channels_none: ChannelWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		confirmed: boolean | null
		confirmed_not: boolean | null
		online: boolean | null
		online_not: boolean | null
		AND: TeamWhereInput[]
		OR: TeamWhereInput[]
		NOT: TeamWhereInput[]
	}
	export interface ChannelWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		name: string | null
		name_not: string | null
		name_in: string[]
		name_not_in: string[]
		name_lt: string | null
		name_lte: string | null
		name_gt: string | null
		name_gte: string | null
		name_contains: string | null
		name_not_contains: string | null
		name_starts_with: string | null
		name_not_starts_with: string | null
		name_ends_with: string | null
		name_not_ends_with: string | null
		slug: string | null
		slug_not: string | null
		slug_in: string[]
		slug_not_in: string[]
		slug_lt: string | null
		slug_lte: string | null
		slug_gt: string | null
		slug_gte: string | null
		slug_contains: string | null
		slug_not_contains: string | null
		slug_starts_with: string | null
		slug_not_starts_with: string | null
		slug_ends_with: string | null
		slug_not_ends_with: string | null
		moderators_every: UserWhereInput | null
		moderators_some: UserWhereInput | null
		moderators_none: UserWhereInput | null
		public: boolean | null
		public_not: boolean | null
		messages_every: MessageWhereInput | null
		messages_some: MessageWhereInput | null
		messages_none: MessageWhereInput | null
		members_every: UserWhereInput | null
		members_some: UserWhereInput | null
		members_none: UserWhereInput | null
		author: UserWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		AND: ChannelWhereInput[]
		OR: ChannelWhereInput[]
		NOT: ChannelWhereInput[]
	}
	export interface MessageWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		body: string | null
		body_not: string | null
		body_in: string[]
		body_not_in: string[]
		body_lt: string | null
		body_lte: string | null
		body_gt: string | null
		body_gte: string | null
		body_contains: string | null
		body_not_contains: string | null
		body_starts_with: string | null
		body_not_starts_with: string | null
		body_ends_with: string | null
		body_not_ends_with: string | null
		parentId: string | null
		parentId_not: string | null
		parentId_in: string[]
		parentId_not_in: string[]
		parentId_lt: string | null
		parentId_lte: string | null
		parentId_gt: string | null
		parentId_gte: string | null
		parentId_contains: string | null
		parentId_not_contains: string | null
		parentId_starts_with: string | null
		parentId_not_starts_with: string | null
		parentId_ends_with: string | null
		parentId_not_ends_with: string | null
		url: string | null
		url_not: string | null
		url_in: string[]
		url_not_in: string[]
		url_lt: string | null
		url_lte: string | null
		url_gt: string | null
		url_gte: string | null
		url_contains: string | null
		url_not_contains: string | null
		url_starts_with: string | null
		url_not_starts_with: string | null
		url_ends_with: string | null
		url_not_ends_with: string | null
		filetype: string | null
		filetype_not: string | null
		filetype_in: string[]
		filetype_not_in: string[]
		filetype_lt: string | null
		filetype_lte: string | null
		filetype_gt: string | null
		filetype_gte: string | null
		filetype_contains: string | null
		filetype_not_contains: string | null
		filetype_starts_with: string | null
		filetype_not_starts_with: string | null
		filetype_ends_with: string | null
		filetype_not_ends_with: string | null
		author: UserWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		AND: MessageWhereInput[]
		OR: MessageWhereInput[]
		NOT: MessageWhereInput[]
	}

	export interface ArgsModerators {
		where: UserWhereInput | null
		orderBy: UserOrderByInput | null
		skip: number | null
		after: string | null
		before: string | null
		first: number | null
		last: number | null
	}

	export interface ArgsMembers {
		where: UserWhereInput | null
		orderBy: UserOrderByInput | null
		skip: number | null
		after: string | null
		before: string | null
		first: number | null
		last: number | null
	}

	export interface ArgsChannels {
		where: ChannelWhereInput | null
		orderBy: ChannelOrderByInput | null
		skip: number | null
		after: string | null
		before: string | null
		first: number | null
		last: number | null
	}

	export type IdResolver = (
		parent: Team,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type NameResolver = (
		parent: Team,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type SlugResolver = (
		parent: Team,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type ModeratorsResolver = (
		parent: Team,
		args: ArgsModerators,
		ctx: Context,
		info: GraphQLResolveInfo
	) => User[] | Promise<User[]>

	export type AuthorResolver = (
		parent: Team,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => User | Promise<User>

	export type MembersResolver = (
		parent: Team,
		args: ArgsMembers,
		ctx: Context,
		info: GraphQLResolveInfo
	) => User[] | Promise<User[]>

	export type ChannelsResolver = (
		parent: Team,
		args: ArgsChannels,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Channel[] | Promise<Channel[]>

	export type CreatedAtResolver = (
		parent: Team,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type UpdatedAtResolver = (
		parent: Team,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type ConfirmedResolver = (
		parent: Team,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export type OnlineResolver = (
		parent: Team,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export interface Type {
		id: (
			parent: Team,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		name: (
			parent: Team,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		slug: (
			parent: Team,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		moderators: (
			parent: Team,
			args: ArgsModerators,
			ctx: Context,
			info: GraphQLResolveInfo
		) => User[] | Promise<User[]>

		author: (
			parent: Team,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => User | Promise<User>

		members: (
			parent: Team,
			args: ArgsMembers,
			ctx: Context,
			info: GraphQLResolveInfo
		) => User[] | Promise<User[]>

		channels: (
			parent: Team,
			args: ArgsChannels,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Channel[] | Promise<Channel[]>

		createdAt: (
			parent: Team,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		updatedAt: (
			parent: Team,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		confirmed: (
			parent: Team,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>

		online: (
			parent: Team,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>
	}
}

export namespace ChannelResolvers {
	export const defaultResolvers = {
		id: (parent: Channel) => parent.id,
		name: (parent: Channel) => parent.name,
		slug: (parent: Channel) => parent.slug,
		public: (parent: Channel) =>
			parent.public === undefined ? null : parent.public,
		createdAt: (parent: Channel) => parent.createdAt,
		updatedAt: (parent: Channel) => parent.updatedAt
	}

	export interface UserWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		email: string | null
		email_not: string | null
		email_in: string[]
		email_not_in: string[]
		email_lt: string | null
		email_lte: string | null
		email_gt: string | null
		email_gte: string | null
		email_contains: string | null
		email_not_contains: string | null
		email_starts_with: string | null
		email_not_starts_with: string | null
		email_ends_with: string | null
		email_not_ends_with: string | null
		notifications_every: NotificationWhereInput | null
		notifications_some: NotificationWhereInput | null
		notifications_none: NotificationWhereInput | null
		set_private: boolean | null
		set_private_not: boolean | null
		username: string | null
		username_not: string | null
		username_in: string[]
		username_not_in: string[]
		username_lt: string | null
		username_lte: string | null
		username_gt: string | null
		username_gte: string | null
		username_contains: string | null
		username_not_contains: string | null
		username_starts_with: string | null
		username_not_starts_with: string | null
		username_ends_with: string | null
		username_not_ends_with: string | null
		password: string | null
		password_not: string | null
		password_in: string[]
		password_not_in: string[]
		password_lt: string | null
		password_lte: string | null
		password_gt: string | null
		password_gte: string | null
		password_contains: string | null
		password_not_contains: string | null
		password_starts_with: string | null
		password_not_starts_with: string | null
		password_ends_with: string | null
		password_not_ends_with: string | null
		gitHubId: string | null
		gitHubId_not: string | null
		gitHubId_in: string[]
		gitHubId_not_in: string[]
		gitHubId_lt: string | null
		gitHubId_lte: string | null
		gitHubId_gt: string | null
		gitHubId_gte: string | null
		gitHubId_contains: string | null
		gitHubId_not_contains: string | null
		gitHubId_starts_with: string | null
		gitHubId_not_starts_with: string | null
		gitHubId_ends_with: string | null
		gitHubId_not_ends_with: string | null
		facebookId: string | null
		facebookId_not: string | null
		facebookId_in: string[]
		facebookId_not_in: string[]
		facebookId_lt: string | null
		facebookId_lte: string | null
		facebookId_gt: string | null
		facebookId_gte: string | null
		facebookId_contains: string | null
		facebookId_not_contains: string | null
		facebookId_starts_with: string | null
		facebookId_not_starts_with: string | null
		facebookId_ends_with: string | null
		facebookId_not_ends_with: string | null
		twitterId: string | null
		twitterId_not: string | null
		twitterId_in: string[]
		twitterId_not_in: string[]
		twitterId_lt: string | null
		twitterId_lte: string | null
		twitterId_gt: string | null
		twitterId_gte: string | null
		twitterId_contains: string | null
		twitterId_not_contains: string | null
		twitterId_starts_with: string | null
		twitterId_not_starts_with: string | null
		twitterId_ends_with: string | null
		twitterId_not_ends_with: string | null
		gmailId: string | null
		gmailId_not: string | null
		gmailId_in: string[]
		gmailId_not_in: string[]
		gmailId_lt: string | null
		gmailId_lte: string | null
		gmailId_gt: string | null
		gmailId_gte: string | null
		gmailId_contains: string | null
		gmailId_not_contains: string | null
		gmailId_starts_with: string | null
		gmailId_not_starts_with: string | null
		gmailId_ends_with: string | null
		gmailId_not_ends_with: string | null
		directMessages_every: CommentWhereInput | null
		directMessages_some: CommentWhereInput | null
		directMessages_none: CommentWhereInput | null
		avatar_url: FileWhereInput | null
		private: boolean | null
		private_not: boolean | null
		blockedUsers_every: UserWhereInput | null
		blockedUsers_some: UserWhereInput | null
		blockedUsers_none: UserWhereInput | null
		confirmed: boolean | null
		confirmed_not: boolean | null
		online: boolean | null
		online_not: boolean | null
		friends_every: UserWhereInput | null
		friends_some: UserWhereInput | null
		friends_none: UserWhereInput | null
		friend_requests_every: UserWhereInput | null
		friend_requests_some: UserWhereInput | null
		friend_requests_none: UserWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		role: UserRole | null
		role_not: UserRole | null
		role_in: UserRole[]
		role_not_in: UserRole[]
		teams_every: TeamWhereInput | null
		teams_some: TeamWhereInput | null
		teams_none: TeamWhereInput | null
		channels_every: ChannelWhereInput | null
		channels_some: ChannelWhereInput | null
		channels_none: ChannelWhereInput | null
		owned_teams_every: TeamWhereInput | null
		owned_teams_some: TeamWhereInput | null
		owned_teams_none: TeamWhereInput | null
		owned_channels_every: ChannelWhereInput | null
		owned_channels_some: ChannelWhereInput | null
		owned_channels_none: ChannelWhereInput | null
		AND: UserWhereInput[]
		OR: UserWhereInput[]
		NOT: UserWhereInput[]
	}
	export interface NotificationWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		message: string | null
		message_not: string | null
		message_in: string[]
		message_not_in: string[]
		message_lt: string | null
		message_lte: string | null
		message_gt: string | null
		message_gte: string | null
		message_contains: string | null
		message_not_contains: string | null
		message_starts_with: string | null
		message_not_starts_with: string | null
		message_ends_with: string | null
		message_not_ends_with: string | null
		author: UserWhereInput | null
		AND: NotificationWhereInput[]
		OR: NotificationWhereInput[]
		NOT: NotificationWhereInput[]
	}
	export interface CommentWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		body: string | null
		body_not: string | null
		body_in: string[]
		body_not_in: string[]
		body_lt: string | null
		body_lte: string | null
		body_gt: string | null
		body_gte: string | null
		body_contains: string | null
		body_not_contains: string | null
		body_starts_with: string | null
		body_not_starts_with: string | null
		body_ends_with: string | null
		body_not_ends_with: string | null
		parentId: string | null
		parentId_not: string | null
		parentId_in: string[]
		parentId_not_in: string[]
		parentId_lt: string | null
		parentId_lte: string | null
		parentId_gt: string | null
		parentId_gte: string | null
		parentId_contains: string | null
		parentId_not_contains: string | null
		parentId_starts_with: string | null
		parentId_not_starts_with: string | null
		parentId_ends_with: string | null
		parentId_not_ends_with: string | null
		pageId: string | null
		pageId_not: string | null
		pageId_in: string[]
		pageId_not_in: string[]
		pageId_lt: string | null
		pageId_lte: string | null
		pageId_gt: string | null
		pageId_gte: string | null
		pageId_contains: string | null
		pageId_not_contains: string | null
		pageId_starts_with: string | null
		pageId_not_starts_with: string | null
		pageId_ends_with: string | null
		pageId_not_ends_with: string | null
		repliedTo: UserWhereInput | null
		ratings: RatingWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		replies_every: CommentWhereInput | null
		replies_some: CommentWhereInput | null
		replies_none: CommentWhereInput | null
		author: UserWhereInput | null
		AND: CommentWhereInput[]
		OR: CommentWhereInput[]
		NOT: CommentWhereInput[]
	}
	export interface RatingWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		vote: number | null
		vote_not: number | null
		vote_in: number[]
		vote_not_in: number[]
		vote_lt: number | null
		vote_lte: number | null
		vote_gt: number | null
		vote_gte: number | null
		author_every: UserWhereInput | null
		author_some: UserWhereInput | null
		author_none: UserWhereInput | null
		AND: RatingWhereInput[]
		OR: RatingWhereInput[]
		NOT: RatingWhereInput[]
	}
	export interface FileWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		filename: string | null
		filename_not: string | null
		filename_in: string[]
		filename_not_in: string[]
		filename_lt: string | null
		filename_lte: string | null
		filename_gt: string | null
		filename_gte: string | null
		filename_contains: string | null
		filename_not_contains: string | null
		filename_starts_with: string | null
		filename_not_starts_with: string | null
		filename_ends_with: string | null
		filename_not_ends_with: string | null
		mimetype: string | null
		mimetype_not: string | null
		mimetype_in: string[]
		mimetype_not_in: string[]
		mimetype_lt: string | null
		mimetype_lte: string | null
		mimetype_gt: string | null
		mimetype_gte: string | null
		mimetype_contains: string | null
		mimetype_not_contains: string | null
		mimetype_starts_with: string | null
		mimetype_not_starts_with: string | null
		mimetype_ends_with: string | null
		mimetype_not_ends_with: string | null
		encoding: string | null
		encoding_not: string | null
		encoding_in: string[]
		encoding_not_in: string[]
		encoding_lt: string | null
		encoding_lte: string | null
		encoding_gt: string | null
		encoding_gte: string | null
		encoding_contains: string | null
		encoding_not_contains: string | null
		encoding_starts_with: string | null
		encoding_not_starts_with: string | null
		encoding_ends_with: string | null
		encoding_not_ends_with: string | null
		key: string | null
		key_not: string | null
		key_in: string[]
		key_not_in: string[]
		key_lt: string | null
		key_lte: string | null
		key_gt: string | null
		key_gte: string | null
		key_contains: string | null
		key_not_contains: string | null
		key_starts_with: string | null
		key_not_starts_with: string | null
		key_ends_with: string | null
		key_not_ends_with: string | null
		ETag: string | null
		ETag_not: string | null
		ETag_in: string[]
		ETag_not_in: string[]
		ETag_lt: string | null
		ETag_lte: string | null
		ETag_gt: string | null
		ETag_gte: string | null
		ETag_contains: string | null
		ETag_not_contains: string | null
		ETag_starts_with: string | null
		ETag_not_starts_with: string | null
		ETag_ends_with: string | null
		ETag_not_ends_with: string | null
		url: string | null
		url_not: string | null
		url_in: string[]
		url_not_in: string[]
		url_lt: string | null
		url_lte: string | null
		url_gt: string | null
		url_gte: string | null
		url_contains: string | null
		url_not_contains: string | null
		url_starts_with: string | null
		url_not_starts_with: string | null
		url_ends_with: string | null
		url_not_ends_with: string | null
		AND: FileWhereInput[]
		OR: FileWhereInput[]
		NOT: FileWhereInput[]
	}
	export interface TeamWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		name: string | null
		name_not: string | null
		name_in: string[]
		name_not_in: string[]
		name_lt: string | null
		name_lte: string | null
		name_gt: string | null
		name_gte: string | null
		name_contains: string | null
		name_not_contains: string | null
		name_starts_with: string | null
		name_not_starts_with: string | null
		name_ends_with: string | null
		name_not_ends_with: string | null
		slug: string | null
		slug_not: string | null
		slug_in: string[]
		slug_not_in: string[]
		slug_lt: string | null
		slug_lte: string | null
		slug_gt: string | null
		slug_gte: string | null
		slug_contains: string | null
		slug_not_contains: string | null
		slug_starts_with: string | null
		slug_not_starts_with: string | null
		slug_ends_with: string | null
		slug_not_ends_with: string | null
		moderators_every: UserWhereInput | null
		moderators_some: UserWhereInput | null
		moderators_none: UserWhereInput | null
		author: UserWhereInput | null
		members_every: UserWhereInput | null
		members_some: UserWhereInput | null
		members_none: UserWhereInput | null
		channels_every: ChannelWhereInput | null
		channels_some: ChannelWhereInput | null
		channels_none: ChannelWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		confirmed: boolean | null
		confirmed_not: boolean | null
		online: boolean | null
		online_not: boolean | null
		AND: TeamWhereInput[]
		OR: TeamWhereInput[]
		NOT: TeamWhereInput[]
	}
	export interface ChannelWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		name: string | null
		name_not: string | null
		name_in: string[]
		name_not_in: string[]
		name_lt: string | null
		name_lte: string | null
		name_gt: string | null
		name_gte: string | null
		name_contains: string | null
		name_not_contains: string | null
		name_starts_with: string | null
		name_not_starts_with: string | null
		name_ends_with: string | null
		name_not_ends_with: string | null
		slug: string | null
		slug_not: string | null
		slug_in: string[]
		slug_not_in: string[]
		slug_lt: string | null
		slug_lte: string | null
		slug_gt: string | null
		slug_gte: string | null
		slug_contains: string | null
		slug_not_contains: string | null
		slug_starts_with: string | null
		slug_not_starts_with: string | null
		slug_ends_with: string | null
		slug_not_ends_with: string | null
		moderators_every: UserWhereInput | null
		moderators_some: UserWhereInput | null
		moderators_none: UserWhereInput | null
		public: boolean | null
		public_not: boolean | null
		messages_every: MessageWhereInput | null
		messages_some: MessageWhereInput | null
		messages_none: MessageWhereInput | null
		members_every: UserWhereInput | null
		members_some: UserWhereInput | null
		members_none: UserWhereInput | null
		author: UserWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		AND: ChannelWhereInput[]
		OR: ChannelWhereInput[]
		NOT: ChannelWhereInput[]
	}
	export interface MessageWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		body: string | null
		body_not: string | null
		body_in: string[]
		body_not_in: string[]
		body_lt: string | null
		body_lte: string | null
		body_gt: string | null
		body_gte: string | null
		body_contains: string | null
		body_not_contains: string | null
		body_starts_with: string | null
		body_not_starts_with: string | null
		body_ends_with: string | null
		body_not_ends_with: string | null
		parentId: string | null
		parentId_not: string | null
		parentId_in: string[]
		parentId_not_in: string[]
		parentId_lt: string | null
		parentId_lte: string | null
		parentId_gt: string | null
		parentId_gte: string | null
		parentId_contains: string | null
		parentId_not_contains: string | null
		parentId_starts_with: string | null
		parentId_not_starts_with: string | null
		parentId_ends_with: string | null
		parentId_not_ends_with: string | null
		url: string | null
		url_not: string | null
		url_in: string[]
		url_not_in: string[]
		url_lt: string | null
		url_lte: string | null
		url_gt: string | null
		url_gte: string | null
		url_contains: string | null
		url_not_contains: string | null
		url_starts_with: string | null
		url_not_starts_with: string | null
		url_ends_with: string | null
		url_not_ends_with: string | null
		filetype: string | null
		filetype_not: string | null
		filetype_in: string[]
		filetype_not_in: string[]
		filetype_lt: string | null
		filetype_lte: string | null
		filetype_gt: string | null
		filetype_gte: string | null
		filetype_contains: string | null
		filetype_not_contains: string | null
		filetype_starts_with: string | null
		filetype_not_starts_with: string | null
		filetype_ends_with: string | null
		filetype_not_ends_with: string | null
		author: UserWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		AND: MessageWhereInput[]
		OR: MessageWhereInput[]
		NOT: MessageWhereInput[]
	}

	export interface ArgsModerators {
		where: UserWhereInput | null
		orderBy: UserOrderByInput | null
		skip: number | null
		after: string | null
		before: string | null
		first: number | null
		last: number | null
	}

	export interface ArgsMessages {
		where: MessageWhereInput | null
		orderBy: MessageOrderByInput | null
		skip: number | null
		after: string | null
		before: string | null
		first: number | null
		last: number | null
	}

	export interface ArgsMembers {
		where: UserWhereInput | null
		orderBy: UserOrderByInput | null
		skip: number | null
		after: string | null
		before: string | null
		first: number | null
		last: number | null
	}

	export type IdResolver = (
		parent: Channel,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type NameResolver = (
		parent: Channel,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type SlugResolver = (
		parent: Channel,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type ModeratorsResolver = (
		parent: Channel,
		args: ArgsModerators,
		ctx: Context,
		info: GraphQLResolveInfo
	) => User[] | Promise<User[]>

	export type PublicResolver = (
		parent: Channel,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | null | Promise<boolean | null>

	export type MessagesResolver = (
		parent: Channel,
		args: ArgsMessages,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Message[] | Promise<Message[]>

	export type MembersResolver = (
		parent: Channel,
		args: ArgsMembers,
		ctx: Context,
		info: GraphQLResolveInfo
	) => User[] | Promise<User[]>

	export type AuthorResolver = (
		parent: Channel,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => User | Promise<User>

	export type CreatedAtResolver = (
		parent: Channel,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type UpdatedAtResolver = (
		parent: Channel,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export interface Type {
		id: (
			parent: Channel,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		name: (
			parent: Channel,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		slug: (
			parent: Channel,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		moderators: (
			parent: Channel,
			args: ArgsModerators,
			ctx: Context,
			info: GraphQLResolveInfo
		) => User[] | Promise<User[]>

		public: (
			parent: Channel,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | null | Promise<boolean | null>

		messages: (
			parent: Channel,
			args: ArgsMessages,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Message[] | Promise<Message[]>

		members: (
			parent: Channel,
			args: ArgsMembers,
			ctx: Context,
			info: GraphQLResolveInfo
		) => User[] | Promise<User[]>

		author: (
			parent: Channel,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => User | Promise<User>

		createdAt: (
			parent: Channel,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		updatedAt: (
			parent: Channel,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>
	}
}

export namespace MessageResolvers {
	export const defaultResolvers = {
		id: (parent: Message) => parent.id,
		body: (parent: Message) => parent.body,
		parentId: (parent: Message) => parent.parentId,
		url: (parent: Message) => parent.url,
		filetype: (parent: Message) => parent.filetype,
		createdAt: (parent: Message) => parent.createdAt,
		updatedAt: (parent: Message) => parent.updatedAt
	}

	export type IdResolver = (
		parent: Message,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type BodyResolver = (
		parent: Message,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type ParentIdResolver = (
		parent: Message,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type UrlResolver = (
		parent: Message,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type FiletypeResolver = (
		parent: Message,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type AuthorResolver = (
		parent: Message,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => User | Promise<User>

	export type CreatedAtResolver = (
		parent: Message,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type UpdatedAtResolver = (
		parent: Message,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export interface Type {
		id: (
			parent: Message,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		body: (
			parent: Message,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		parentId: (
			parent: Message,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		url: (
			parent: Message,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		filetype: (
			parent: Message,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		author: (
			parent: Message,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => User | Promise<User>

		createdAt: (
			parent: Message,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		updatedAt: (
			parent: Message,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>
	}
}

export namespace ProfileResponseResolvers {
	export const defaultResolvers = {}

	export type UserResolver = (
		parent: ProfileResponse,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => MyUser | null | Promise<MyUser | null>

	export type ErrorResolver = (
		parent: ProfileResponse,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => ProfileError | null | Promise<ProfileError | null>

	export interface Type {
		user: (
			parent: ProfileResponse,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => MyUser | null | Promise<MyUser | null>

		error: (
			parent: ProfileResponse,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => ProfileError | null | Promise<ProfileError | null>
	}
}

export namespace ProfileErrorResolvers {
	export const defaultResolvers = {
		username: (parent: ProfileError) =>
			parent.username === undefined ? null : parent.username,
		message: (parent: ProfileError) =>
			parent.message === undefined ? null : parent.message,
		error: (parent: ProfileError) =>
			parent.error === undefined ? null : parent.error
	}

	export type UsernameResolver = (
		parent: ProfileError,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | null | Promise<string | null>

	export type Avatar_urlResolver = (
		parent: ProfileError,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => File | null | Promise<File | null>

	export type MessageResolver = (
		parent: ProfileError,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | null | Promise<string | null>

	export type ErrorResolver = (
		parent: ProfileError,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | null | Promise<string | null>

	export interface Type {
		username: (
			parent: ProfileError,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | null | Promise<string | null>

		avatar_url: (
			parent: ProfileError,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => File | null | Promise<File | null>

		message: (
			parent: ProfileError,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | null | Promise<string | null>

		error: (
			parent: ProfileError,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | null | Promise<string | null>
	}
}

export namespace CommentConnectionResolvers {
	export const defaultResolvers = {
		pageInfo: (parent: CommentConnection) => parent.pageInfo,
		edges: (parent: CommentConnection) => parent.edges
	}

	export type PageInfoResolver = (
		parent: CommentConnection,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => PageInfo | Promise<PageInfo>

	export type EdgesResolver = (
		parent: CommentConnection,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => CommentEdge[] | Promise<CommentEdge[]>

	export type AggregateResolver = (
		parent: CommentConnection,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => AggregateComment | Promise<AggregateComment>

	export interface Type {
		pageInfo: (
			parent: CommentConnection,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => PageInfo | Promise<PageInfo>

		edges: (
			parent: CommentConnection,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => CommentEdge[] | Promise<CommentEdge[]>

		aggregate: (
			parent: CommentConnection,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => AggregateComment | Promise<AggregateComment>
	}
}

export namespace PageInfoResolvers {
	export const defaultResolvers = {
		hasNextPage: (parent: PageInfo) => parent.hasNextPage,
		hasPreviousPage: (parent: PageInfo) => parent.hasPreviousPage,
		startCursor: (parent: PageInfo) =>
			parent.startCursor === undefined ? null : parent.startCursor,
		endCursor: (parent: PageInfo) =>
			parent.endCursor === undefined ? null : parent.endCursor
	}

	export type HasNextPageResolver = (
		parent: PageInfo,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export type HasPreviousPageResolver = (
		parent: PageInfo,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export type StartCursorResolver = (
		parent: PageInfo,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | null | Promise<string | null>

	export type EndCursorResolver = (
		parent: PageInfo,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | null | Promise<string | null>

	export interface Type {
		hasNextPage: (
			parent: PageInfo,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>

		hasPreviousPage: (
			parent: PageInfo,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>

		startCursor: (
			parent: PageInfo,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | null | Promise<string | null>

		endCursor: (
			parent: PageInfo,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | null | Promise<string | null>
	}
}

export namespace CommentEdgeResolvers {
	export const defaultResolvers = {
		node: (parent: CommentEdge) => parent.node,
		cursor: (parent: CommentEdge) => parent.cursor
	}

	export type NodeResolver = (
		parent: CommentEdge,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => Comment | Promise<Comment>

	export type CursorResolver = (
		parent: CommentEdge,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export interface Type {
		node: (
			parent: CommentEdge,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => Comment | Promise<Comment>

		cursor: (
			parent: CommentEdge,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>
	}
}

export namespace AggregateCommentResolvers {
	export const defaultResolvers = {
		count: (parent: AggregateComment) => parent.count
	}

	export type CountResolver = (
		parent: AggregateComment,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => number | Promise<number>

	export interface Type {
		count: (
			parent: AggregateComment,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => number | Promise<number>
	}
}

export namespace TodoResolvers {
	export const defaultResolvers = {
		id: (parent: Todo) => parent.id,
		body: (parent: Todo) => parent.body,
		createdAt: (parent: Todo) => parent.createdAt,
		updatedAt: (parent: Todo) => parent.updatedAt
	}

	export type IdResolver = (
		parent: Todo,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type BodyResolver = (
		parent: Todo,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type AuthorResolver = (
		parent: Todo,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => User | Promise<User>

	export type CreatedAtResolver = (
		parent: Todo,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type UpdatedAtResolver = (
		parent: Todo,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export interface Type {
		id: (
			parent: Todo,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		body: (
			parent: Todo,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		author: (
			parent: Todo,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => User | Promise<User>

		createdAt: (
			parent: Todo,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		updatedAt: (
			parent: Todo,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>
	}
}

export namespace MutationResolvers {
	export const defaultResolvers = {}

	export interface ArgsFriendRemove {
		friendId: string
	}

	export interface ArgsRemoveChannelMember {
		channelId: string
		userId: string
	}

	export interface ArgsCreateMessage {
		body: string
		channelId: string
	}

	export interface ArgsCreateChannel {
		name: string
		teamId: string
	}

	export interface ArgsCreateTeam {
		name: string
	}

	export interface ArgsAddTeamMember {
		userId: string
		teamId: string
	}

	export interface ArgsAddChannelMember {
		userId: string
		channelId: string
	}

	export interface ArgsCreateChannelMember {
		userId: string
		channelId: string
	}

	export interface ArgsDeleteComment {
		id: string
	}

	export interface ArgsEditComment {
		id: string
		body: string
	}

	export interface ArgsLogin {
		email: string
		password: string | null
	}

	export interface ArgsRegister {
		email: string
		username: string
		password: string
	}

	export interface ArgsForgotPassword {
		email: string
	}

	export interface ArgsCheckToken {
		token: string
	}

	export interface ArgsResetPassword {
		id: string
		password: string
	}

	export interface ArgsAuthConfirmation {
		token: string
	}

	export interface ArgsCreateComment {
		pageId: string
		parentId: string
		body: string | null
		repliedTo: string | null
	}

	export interface ArgsCreateReply {
		pageId: string
		parentId: string
		body: string | null
		repliedTo: string | null
	}

	export interface ArgsLikeComment {
		commentId: string
	}

	export interface ArgsFriendRequest {
		requestedId: string
	}

	export interface ArgsAddFriend {
		requestedId: string
	}

	export interface ArgsFriendReject {
		id: string
	}

	export interface ArgsCreateTodo {
		body: string
	}

	export interface ArgsEditTodo {
		id: string
	}

	export interface ArgsDeleteTodo {
		id: string
	}

	export interface ArgsCreateOrder {
		totalPrice: number
	}

	export interface ArgsBlockUser {
		id: string
	}

	export interface ArgsUnblockUser {
		id: string
	}

	export interface ArgsSetProfilePrivacy {
		bool: boolean
	}

	export type FriendRemoveResolver = (
		parent: undefined,
		args: ArgsFriendRemove,
		ctx: Context,
		info: GraphQLResolveInfo
	) => FriendRemoveResponse | Promise<FriendRemoveResponse>

	export type RemoveChannelMemberResolver = (
		parent: undefined,
		args: ArgsRemoveChannelMember,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Channel | Promise<Channel>

	export type CreateMessageResolver = (
		parent: undefined,
		args: ArgsCreateMessage,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Message | Promise<Message>

	export type CreateChannelResolver = (
		parent: undefined,
		args: ArgsCreateChannel,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Channel | Promise<Channel>

	export type CreateTeamResolver = (
		parent: undefined,
		args: ArgsCreateTeam,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Team | Promise<Team>

	export type AddTeamMemberResolver = (
		parent: undefined,
		args: ArgsAddTeamMember,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Team | Promise<Team>

	export type AddChannelMemberResolver = (
		parent: undefined,
		args: ArgsAddChannelMember,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Channel | Promise<Channel>

	export type CreateChannelMemberResolver = (
		parent: undefined,
		args: ArgsCreateChannelMember,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Channel | Promise<Channel>

	export type DeleteCommentResolver = (
		parent: undefined,
		args: ArgsDeleteComment,
		ctx: Context,
		info: GraphQLResolveInfo
	) => DeleteCommentResponse | Promise<DeleteCommentResponse>

	export type EditCommentResolver = (
		parent: undefined,
		args: ArgsEditComment,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Comment | Promise<Comment>

	export type LoginResolver = (
		parent: undefined,
		args: ArgsLogin,
		ctx: Context,
		info: GraphQLResolveInfo
	) => LoginResponse | Promise<LoginResponse>

	export type RegisterResolver = (
		parent: undefined,
		args: ArgsRegister,
		ctx: Context,
		info: GraphQLResolveInfo
	) => RegisterResponse | Promise<RegisterResponse>

	export type ForgotPasswordResolver = (
		parent: undefined,
		args: ArgsForgotPassword,
		ctx: Context,
		info: GraphQLResolveInfo
	) => ForgotPasswordResponse | Promise<ForgotPasswordResponse>

	export type CheckTokenResolver = (
		parent: undefined,
		args: ArgsCheckToken,
		ctx: Context,
		info: GraphQLResolveInfo
	) => ForgotPasswordResponse | Promise<ForgotPasswordResponse>

	export type ResetPasswordResolver = (
		parent: undefined,
		args: ArgsResetPassword,
		ctx: Context,
		info: GraphQLResolveInfo
	) => ForgotPasswordResponse | Promise<ForgotPasswordResponse>

	export type LogoutResolver = (
		parent: undefined,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export type AuthConfirmationResolver = (
		parent: undefined,
		args: ArgsAuthConfirmation,
		ctx: Context,
		info: GraphQLResolveInfo
	) => ForgotPasswordResponse | Promise<ForgotPasswordResponse>

	export type CreateCommentResolver = (
		parent: undefined,
		args: ArgsCreateComment,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Comment | Promise<Comment>

	export type CreateReplyResolver = (
		parent: undefined,
		args: ArgsCreateReply,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Comment | Promise<Comment>

	export type LikeCommentResolver = (
		parent: undefined,
		args: ArgsLikeComment,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Comment | null | Promise<Comment | null>

	export type FriendRequestResolver = (
		parent: undefined,
		args: ArgsFriendRequest,
		ctx: Context,
		info: GraphQLResolveInfo
	) => VoidResponse | Promise<VoidResponse>

	export type AddFriendResolver = (
		parent: undefined,
		args: ArgsAddFriend,
		ctx: Context,
		info: GraphQLResolveInfo
	) => AddFriendResponse | Promise<AddFriendResponse>

	export type FriendRejectResolver = (
		parent: undefined,
		args: ArgsFriendReject,
		ctx: Context,
		info: GraphQLResolveInfo
	) => VoidResponse | Promise<VoidResponse>

	export type CreateTodoResolver = (
		parent: undefined,
		args: ArgsCreateTodo,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Todo | null | Promise<Todo | null>

	export type EditTodoResolver = (
		parent: undefined,
		args: ArgsEditTodo,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Todo | null | Promise<Todo | null>

	export type DeleteTodoResolver = (
		parent: undefined,
		args: ArgsDeleteTodo,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Todo | null | Promise<Todo | null>

	export type CreateTodoProjectResolver = (
		parent: undefined,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => TodoProject | null | Promise<TodoProject | null>

	export type CreateOrderResolver = (
		parent: undefined,
		args: ArgsCreateOrder,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Order | null | Promise<Order | null>

	export type BlockUserResolver = (
		parent: undefined,
		args: ArgsBlockUser,
		ctx: Context,
		info: GraphQLResolveInfo
	) => MyUser | null | Promise<MyUser | null>

	export type UnblockUserResolver = (
		parent: undefined,
		args: ArgsUnblockUser,
		ctx: Context,
		info: GraphQLResolveInfo
	) => MyUser | null | Promise<MyUser | null>

	export type SetProfilePrivacyResolver = (
		parent: undefined,
		args: ArgsSetProfilePrivacy,
		ctx: Context,
		info: GraphQLResolveInfo
	) => MyUser | null | Promise<MyUser | null>

	export interface Type {
		friendRemove: (
			parent: undefined,
			args: ArgsFriendRemove,
			ctx: Context,
			info: GraphQLResolveInfo
		) => FriendRemoveResponse | Promise<FriendRemoveResponse>

		removeChannelMember: (
			parent: undefined,
			args: ArgsRemoveChannelMember,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Channel | Promise<Channel>

		createMessage: (
			parent: undefined,
			args: ArgsCreateMessage,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Message | Promise<Message>

		createChannel: (
			parent: undefined,
			args: ArgsCreateChannel,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Channel | Promise<Channel>

		createTeam: (
			parent: undefined,
			args: ArgsCreateTeam,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Team | Promise<Team>

		addTeamMember: (
			parent: undefined,
			args: ArgsAddTeamMember,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Team | Promise<Team>

		addChannelMember: (
			parent: undefined,
			args: ArgsAddChannelMember,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Channel | Promise<Channel>

		createChannelMember: (
			parent: undefined,
			args: ArgsCreateChannelMember,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Channel | Promise<Channel>

		deleteComment: (
			parent: undefined,
			args: ArgsDeleteComment,
			ctx: Context,
			info: GraphQLResolveInfo
		) => DeleteCommentResponse | Promise<DeleteCommentResponse>

		editComment: (
			parent: undefined,
			args: ArgsEditComment,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Comment | Promise<Comment>

		login: (
			parent: undefined,
			args: ArgsLogin,
			ctx: Context,
			info: GraphQLResolveInfo
		) => LoginResponse | Promise<LoginResponse>

		register: (
			parent: undefined,
			args: ArgsRegister,
			ctx: Context,
			info: GraphQLResolveInfo
		) => RegisterResponse | Promise<RegisterResponse>

		forgotPassword: (
			parent: undefined,
			args: ArgsForgotPassword,
			ctx: Context,
			info: GraphQLResolveInfo
		) => ForgotPasswordResponse | Promise<ForgotPasswordResponse>

		checkToken: (
			parent: undefined,
			args: ArgsCheckToken,
			ctx: Context,
			info: GraphQLResolveInfo
		) => ForgotPasswordResponse | Promise<ForgotPasswordResponse>

		resetPassword: (
			parent: undefined,
			args: ArgsResetPassword,
			ctx: Context,
			info: GraphQLResolveInfo
		) => ForgotPasswordResponse | Promise<ForgotPasswordResponse>

		logout: (
			parent: undefined,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>

		authConfirmation: (
			parent: undefined,
			args: ArgsAuthConfirmation,
			ctx: Context,
			info: GraphQLResolveInfo
		) => ForgotPasswordResponse | Promise<ForgotPasswordResponse>

		createComment: (
			parent: undefined,
			args: ArgsCreateComment,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Comment | Promise<Comment>

		createReply: (
			parent: undefined,
			args: ArgsCreateReply,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Comment | Promise<Comment>

		likeComment: (
			parent: undefined,
			args: ArgsLikeComment,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Comment | null | Promise<Comment | null>

		friendRequest: (
			parent: undefined,
			args: ArgsFriendRequest,
			ctx: Context,
			info: GraphQLResolveInfo
		) => VoidResponse | Promise<VoidResponse>

		addFriend: (
			parent: undefined,
			args: ArgsAddFriend,
			ctx: Context,
			info: GraphQLResolveInfo
		) => AddFriendResponse | Promise<AddFriendResponse>

		friendReject: (
			parent: undefined,
			args: ArgsFriendReject,
			ctx: Context,
			info: GraphQLResolveInfo
		) => VoidResponse | Promise<VoidResponse>

		createTodo: (
			parent: undefined,
			args: ArgsCreateTodo,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Todo | null | Promise<Todo | null>

		editTodo: (
			parent: undefined,
			args: ArgsEditTodo,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Todo | null | Promise<Todo | null>

		deleteTodo: (
			parent: undefined,
			args: ArgsDeleteTodo,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Todo | null | Promise<Todo | null>

		createTodoProject: (
			parent: undefined,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => TodoProject | null | Promise<TodoProject | null>

		createOrder: (
			parent: undefined,
			args: ArgsCreateOrder,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Order | null | Promise<Order | null>

		blockUser: (
			parent: undefined,
			args: ArgsBlockUser,
			ctx: Context,
			info: GraphQLResolveInfo
		) => MyUser | null | Promise<MyUser | null>

		unblockUser: (
			parent: undefined,
			args: ArgsUnblockUser,
			ctx: Context,
			info: GraphQLResolveInfo
		) => MyUser | null | Promise<MyUser | null>

		setProfilePrivacy: (
			parent: undefined,
			args: ArgsSetProfilePrivacy,
			ctx: Context,
			info: GraphQLResolveInfo
		) => MyUser | null | Promise<MyUser | null>
	}
}

export namespace FriendRemoveResponseResolvers {
	export const defaultResolvers = {
		ok: (parent: FriendRemoveResponse) => parent.ok
	}

	export type OkResolver = (
		parent: FriendRemoveResponse,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export type UserResolver = (
		parent: FriendRemoveResponse,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => User | null | Promise<User | null>

	export interface Type {
		ok: (
			parent: FriendRemoveResponse,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>

		user: (
			parent: FriendRemoveResponse,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => User | null | Promise<User | null>
	}
}

export namespace DeleteCommentResponseResolvers {
	export const defaultResolvers = {
		id: (parent: DeleteCommentResponse) =>
			parent.id === undefined ? null : parent.id,
		parentId: (parent: DeleteCommentResponse) =>
			parent.parentId === undefined ? null : parent.parentId
	}

	export type IdResolver = (
		parent: DeleteCommentResponse,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | null | Promise<string | null>

	export type ParentIdResolver = (
		parent: DeleteCommentResponse,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | null | Promise<string | null>

	export interface Type {
		id: (
			parent: DeleteCommentResponse,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | null | Promise<string | null>

		parentId: (
			parent: DeleteCommentResponse,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | null | Promise<string | null>
	}
}

export namespace LoginResponseResolvers {
	export const defaultResolvers = {
		ok: (parent: LoginResponse) => parent.ok,
		token: (parent: LoginResponse) =>
			parent.token === undefined ? null : parent.token,
		refreshToken: (parent: LoginResponse) => parent.refreshToken
	}

	export type OkResolver = (
		parent: LoginResponse,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export type TokenResolver = (
		parent: LoginResponse,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | null | Promise<string | null>

	export type RefreshTokenResolver = (
		parent: LoginResponse,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type UserResolver = (
		parent: LoginResponse,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => User | null | Promise<User | null>

	export interface Type {
		ok: (
			parent: LoginResponse,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>

		token: (
			parent: LoginResponse,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | null | Promise<string | null>

		refreshToken: (
			parent: LoginResponse,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		user: (
			parent: LoginResponse,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => User | null | Promise<User | null>
	}
}

export namespace RegisterResponseResolvers {
	export const defaultResolvers = {
		ok: (parent: RegisterResponse) => parent.ok,
		result: (parent: RegisterResponse) => parent.result
	}

	export type OkResolver = (
		parent: RegisterResponse,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export type ResultResolver = (
		parent: RegisterResponse,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export interface Type {
		ok: (
			parent: RegisterResponse,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>

		result: (
			parent: RegisterResponse,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>
	}
}

export namespace ForgotPasswordResponseResolvers {
	export const defaultResolvers = {
		ok: (parent: ForgotPasswordResponse) => parent.ok,
		result: (parent: ForgotPasswordResponse) => parent.result
	}

	export type OkResolver = (
		parent: ForgotPasswordResponse,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export type ResultResolver = (
		parent: ForgotPasswordResponse,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export interface Type {
		ok: (
			parent: ForgotPasswordResponse,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>

		result: (
			parent: ForgotPasswordResponse,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>
	}
}

export namespace VoidResponseResolvers {
	export const defaultResolvers = {
		ok: (parent: VoidResponse) =>
			parent.ok === undefined ? null : parent.ok
	}

	export type OkResolver = (
		parent: VoidResponse,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | null | Promise<boolean | null>

	export type ErrorsResolver = (
		parent: VoidResponse,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => Error[] | Promise<Error[]>

	export interface Type {
		ok: (
			parent: VoidResponse,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | null | Promise<boolean | null>

		errors: (
			parent: VoidResponse,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => Error[] | Promise<Error[]>
	}
}

export namespace ErrorResolvers {
	export const defaultResolvers = {
		path: (parent: Error) => parent.path,
		message: (parent: Error) => parent.message
	}

	export type PathResolver = (
		parent: Error,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type MessageResolver = (
		parent: Error,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export interface Type {
		path: (
			parent: Error,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		message: (
			parent: Error,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>
	}
}

export namespace AddFriendResponseResolvers {
	export const defaultResolvers = {
		ok: (parent: AddFriendResponse) => parent.ok
	}

	export type OkResolver = (
		parent: AddFriendResponse,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export type ErrorsResolver = (
		parent: AddFriendResponse,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => Error[] | Promise<Error[]>

	export type UserResolver = (
		parent: AddFriendResponse,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => User | null | Promise<User | null>

	export interface Type {
		ok: (
			parent: AddFriendResponse,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>

		errors: (
			parent: AddFriendResponse,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => Error[] | Promise<Error[]>

		user: (
			parent: AddFriendResponse,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => User | null | Promise<User | null>
	}
}

export namespace TodoProjectResolvers {
	export const defaultResolvers = {
		id: (parent: TodoProject) => parent.id,
		name: (parent: TodoProject) => parent.name,
		createdAt: (parent: TodoProject) => parent.createdAt,
		updatedAt: (parent: TodoProject) => parent.updatedAt
	}

	export interface TodoWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		body: string | null
		body_not: string | null
		body_in: string[]
		body_not_in: string[]
		body_lt: string | null
		body_lte: string | null
		body_gt: string | null
		body_gte: string | null
		body_contains: string | null
		body_not_contains: string | null
		body_starts_with: string | null
		body_not_starts_with: string | null
		body_ends_with: string | null
		body_not_ends_with: string | null
		author: UserWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		AND: TodoWhereInput[]
		OR: TodoWhereInput[]
		NOT: TodoWhereInput[]
	}
	export interface UserWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		email: string | null
		email_not: string | null
		email_in: string[]
		email_not_in: string[]
		email_lt: string | null
		email_lte: string | null
		email_gt: string | null
		email_gte: string | null
		email_contains: string | null
		email_not_contains: string | null
		email_starts_with: string | null
		email_not_starts_with: string | null
		email_ends_with: string | null
		email_not_ends_with: string | null
		notifications_every: NotificationWhereInput | null
		notifications_some: NotificationWhereInput | null
		notifications_none: NotificationWhereInput | null
		set_private: boolean | null
		set_private_not: boolean | null
		username: string | null
		username_not: string | null
		username_in: string[]
		username_not_in: string[]
		username_lt: string | null
		username_lte: string | null
		username_gt: string | null
		username_gte: string | null
		username_contains: string | null
		username_not_contains: string | null
		username_starts_with: string | null
		username_not_starts_with: string | null
		username_ends_with: string | null
		username_not_ends_with: string | null
		password: string | null
		password_not: string | null
		password_in: string[]
		password_not_in: string[]
		password_lt: string | null
		password_lte: string | null
		password_gt: string | null
		password_gte: string | null
		password_contains: string | null
		password_not_contains: string | null
		password_starts_with: string | null
		password_not_starts_with: string | null
		password_ends_with: string | null
		password_not_ends_with: string | null
		gitHubId: string | null
		gitHubId_not: string | null
		gitHubId_in: string[]
		gitHubId_not_in: string[]
		gitHubId_lt: string | null
		gitHubId_lte: string | null
		gitHubId_gt: string | null
		gitHubId_gte: string | null
		gitHubId_contains: string | null
		gitHubId_not_contains: string | null
		gitHubId_starts_with: string | null
		gitHubId_not_starts_with: string | null
		gitHubId_ends_with: string | null
		gitHubId_not_ends_with: string | null
		facebookId: string | null
		facebookId_not: string | null
		facebookId_in: string[]
		facebookId_not_in: string[]
		facebookId_lt: string | null
		facebookId_lte: string | null
		facebookId_gt: string | null
		facebookId_gte: string | null
		facebookId_contains: string | null
		facebookId_not_contains: string | null
		facebookId_starts_with: string | null
		facebookId_not_starts_with: string | null
		facebookId_ends_with: string | null
		facebookId_not_ends_with: string | null
		twitterId: string | null
		twitterId_not: string | null
		twitterId_in: string[]
		twitterId_not_in: string[]
		twitterId_lt: string | null
		twitterId_lte: string | null
		twitterId_gt: string | null
		twitterId_gte: string | null
		twitterId_contains: string | null
		twitterId_not_contains: string | null
		twitterId_starts_with: string | null
		twitterId_not_starts_with: string | null
		twitterId_ends_with: string | null
		twitterId_not_ends_with: string | null
		gmailId: string | null
		gmailId_not: string | null
		gmailId_in: string[]
		gmailId_not_in: string[]
		gmailId_lt: string | null
		gmailId_lte: string | null
		gmailId_gt: string | null
		gmailId_gte: string | null
		gmailId_contains: string | null
		gmailId_not_contains: string | null
		gmailId_starts_with: string | null
		gmailId_not_starts_with: string | null
		gmailId_ends_with: string | null
		gmailId_not_ends_with: string | null
		directMessages_every: CommentWhereInput | null
		directMessages_some: CommentWhereInput | null
		directMessages_none: CommentWhereInput | null
		avatar_url: FileWhereInput | null
		private: boolean | null
		private_not: boolean | null
		blockedUsers_every: UserWhereInput | null
		blockedUsers_some: UserWhereInput | null
		blockedUsers_none: UserWhereInput | null
		confirmed: boolean | null
		confirmed_not: boolean | null
		online: boolean | null
		online_not: boolean | null
		friends_every: UserWhereInput | null
		friends_some: UserWhereInput | null
		friends_none: UserWhereInput | null
		friend_requests_every: UserWhereInput | null
		friend_requests_some: UserWhereInput | null
		friend_requests_none: UserWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		role: UserRole | null
		role_not: UserRole | null
		role_in: UserRole[]
		role_not_in: UserRole[]
		teams_every: TeamWhereInput | null
		teams_some: TeamWhereInput | null
		teams_none: TeamWhereInput | null
		channels_every: ChannelWhereInput | null
		channels_some: ChannelWhereInput | null
		channels_none: ChannelWhereInput | null
		owned_teams_every: TeamWhereInput | null
		owned_teams_some: TeamWhereInput | null
		owned_teams_none: TeamWhereInput | null
		owned_channels_every: ChannelWhereInput | null
		owned_channels_some: ChannelWhereInput | null
		owned_channels_none: ChannelWhereInput | null
		AND: UserWhereInput[]
		OR: UserWhereInput[]
		NOT: UserWhereInput[]
	}
	export interface NotificationWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		message: string | null
		message_not: string | null
		message_in: string[]
		message_not_in: string[]
		message_lt: string | null
		message_lte: string | null
		message_gt: string | null
		message_gte: string | null
		message_contains: string | null
		message_not_contains: string | null
		message_starts_with: string | null
		message_not_starts_with: string | null
		message_ends_with: string | null
		message_not_ends_with: string | null
		author: UserWhereInput | null
		AND: NotificationWhereInput[]
		OR: NotificationWhereInput[]
		NOT: NotificationWhereInput[]
	}
	export interface CommentWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		body: string | null
		body_not: string | null
		body_in: string[]
		body_not_in: string[]
		body_lt: string | null
		body_lte: string | null
		body_gt: string | null
		body_gte: string | null
		body_contains: string | null
		body_not_contains: string | null
		body_starts_with: string | null
		body_not_starts_with: string | null
		body_ends_with: string | null
		body_not_ends_with: string | null
		parentId: string | null
		parentId_not: string | null
		parentId_in: string[]
		parentId_not_in: string[]
		parentId_lt: string | null
		parentId_lte: string | null
		parentId_gt: string | null
		parentId_gte: string | null
		parentId_contains: string | null
		parentId_not_contains: string | null
		parentId_starts_with: string | null
		parentId_not_starts_with: string | null
		parentId_ends_with: string | null
		parentId_not_ends_with: string | null
		pageId: string | null
		pageId_not: string | null
		pageId_in: string[]
		pageId_not_in: string[]
		pageId_lt: string | null
		pageId_lte: string | null
		pageId_gt: string | null
		pageId_gte: string | null
		pageId_contains: string | null
		pageId_not_contains: string | null
		pageId_starts_with: string | null
		pageId_not_starts_with: string | null
		pageId_ends_with: string | null
		pageId_not_ends_with: string | null
		repliedTo: UserWhereInput | null
		ratings: RatingWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		replies_every: CommentWhereInput | null
		replies_some: CommentWhereInput | null
		replies_none: CommentWhereInput | null
		author: UserWhereInput | null
		AND: CommentWhereInput[]
		OR: CommentWhereInput[]
		NOT: CommentWhereInput[]
	}
	export interface RatingWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		vote: number | null
		vote_not: number | null
		vote_in: number[]
		vote_not_in: number[]
		vote_lt: number | null
		vote_lte: number | null
		vote_gt: number | null
		vote_gte: number | null
		author_every: UserWhereInput | null
		author_some: UserWhereInput | null
		author_none: UserWhereInput | null
		AND: RatingWhereInput[]
		OR: RatingWhereInput[]
		NOT: RatingWhereInput[]
	}
	export interface FileWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		filename: string | null
		filename_not: string | null
		filename_in: string[]
		filename_not_in: string[]
		filename_lt: string | null
		filename_lte: string | null
		filename_gt: string | null
		filename_gte: string | null
		filename_contains: string | null
		filename_not_contains: string | null
		filename_starts_with: string | null
		filename_not_starts_with: string | null
		filename_ends_with: string | null
		filename_not_ends_with: string | null
		mimetype: string | null
		mimetype_not: string | null
		mimetype_in: string[]
		mimetype_not_in: string[]
		mimetype_lt: string | null
		mimetype_lte: string | null
		mimetype_gt: string | null
		mimetype_gte: string | null
		mimetype_contains: string | null
		mimetype_not_contains: string | null
		mimetype_starts_with: string | null
		mimetype_not_starts_with: string | null
		mimetype_ends_with: string | null
		mimetype_not_ends_with: string | null
		encoding: string | null
		encoding_not: string | null
		encoding_in: string[]
		encoding_not_in: string[]
		encoding_lt: string | null
		encoding_lte: string | null
		encoding_gt: string | null
		encoding_gte: string | null
		encoding_contains: string | null
		encoding_not_contains: string | null
		encoding_starts_with: string | null
		encoding_not_starts_with: string | null
		encoding_ends_with: string | null
		encoding_not_ends_with: string | null
		key: string | null
		key_not: string | null
		key_in: string[]
		key_not_in: string[]
		key_lt: string | null
		key_lte: string | null
		key_gt: string | null
		key_gte: string | null
		key_contains: string | null
		key_not_contains: string | null
		key_starts_with: string | null
		key_not_starts_with: string | null
		key_ends_with: string | null
		key_not_ends_with: string | null
		ETag: string | null
		ETag_not: string | null
		ETag_in: string[]
		ETag_not_in: string[]
		ETag_lt: string | null
		ETag_lte: string | null
		ETag_gt: string | null
		ETag_gte: string | null
		ETag_contains: string | null
		ETag_not_contains: string | null
		ETag_starts_with: string | null
		ETag_not_starts_with: string | null
		ETag_ends_with: string | null
		ETag_not_ends_with: string | null
		url: string | null
		url_not: string | null
		url_in: string[]
		url_not_in: string[]
		url_lt: string | null
		url_lte: string | null
		url_gt: string | null
		url_gte: string | null
		url_contains: string | null
		url_not_contains: string | null
		url_starts_with: string | null
		url_not_starts_with: string | null
		url_ends_with: string | null
		url_not_ends_with: string | null
		AND: FileWhereInput[]
		OR: FileWhereInput[]
		NOT: FileWhereInput[]
	}
	export interface TeamWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		name: string | null
		name_not: string | null
		name_in: string[]
		name_not_in: string[]
		name_lt: string | null
		name_lte: string | null
		name_gt: string | null
		name_gte: string | null
		name_contains: string | null
		name_not_contains: string | null
		name_starts_with: string | null
		name_not_starts_with: string | null
		name_ends_with: string | null
		name_not_ends_with: string | null
		slug: string | null
		slug_not: string | null
		slug_in: string[]
		slug_not_in: string[]
		slug_lt: string | null
		slug_lte: string | null
		slug_gt: string | null
		slug_gte: string | null
		slug_contains: string | null
		slug_not_contains: string | null
		slug_starts_with: string | null
		slug_not_starts_with: string | null
		slug_ends_with: string | null
		slug_not_ends_with: string | null
		moderators_every: UserWhereInput | null
		moderators_some: UserWhereInput | null
		moderators_none: UserWhereInput | null
		author: UserWhereInput | null
		members_every: UserWhereInput | null
		members_some: UserWhereInput | null
		members_none: UserWhereInput | null
		channels_every: ChannelWhereInput | null
		channels_some: ChannelWhereInput | null
		channels_none: ChannelWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		confirmed: boolean | null
		confirmed_not: boolean | null
		online: boolean | null
		online_not: boolean | null
		AND: TeamWhereInput[]
		OR: TeamWhereInput[]
		NOT: TeamWhereInput[]
	}
	export interface ChannelWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		name: string | null
		name_not: string | null
		name_in: string[]
		name_not_in: string[]
		name_lt: string | null
		name_lte: string | null
		name_gt: string | null
		name_gte: string | null
		name_contains: string | null
		name_not_contains: string | null
		name_starts_with: string | null
		name_not_starts_with: string | null
		name_ends_with: string | null
		name_not_ends_with: string | null
		slug: string | null
		slug_not: string | null
		slug_in: string[]
		slug_not_in: string[]
		slug_lt: string | null
		slug_lte: string | null
		slug_gt: string | null
		slug_gte: string | null
		slug_contains: string | null
		slug_not_contains: string | null
		slug_starts_with: string | null
		slug_not_starts_with: string | null
		slug_ends_with: string | null
		slug_not_ends_with: string | null
		moderators_every: UserWhereInput | null
		moderators_some: UserWhereInput | null
		moderators_none: UserWhereInput | null
		public: boolean | null
		public_not: boolean | null
		messages_every: MessageWhereInput | null
		messages_some: MessageWhereInput | null
		messages_none: MessageWhereInput | null
		members_every: UserWhereInput | null
		members_some: UserWhereInput | null
		members_none: UserWhereInput | null
		author: UserWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		AND: ChannelWhereInput[]
		OR: ChannelWhereInput[]
		NOT: ChannelWhereInput[]
	}
	export interface MessageWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		body: string | null
		body_not: string | null
		body_in: string[]
		body_not_in: string[]
		body_lt: string | null
		body_lte: string | null
		body_gt: string | null
		body_gte: string | null
		body_contains: string | null
		body_not_contains: string | null
		body_starts_with: string | null
		body_not_starts_with: string | null
		body_ends_with: string | null
		body_not_ends_with: string | null
		parentId: string | null
		parentId_not: string | null
		parentId_in: string[]
		parentId_not_in: string[]
		parentId_lt: string | null
		parentId_lte: string | null
		parentId_gt: string | null
		parentId_gte: string | null
		parentId_contains: string | null
		parentId_not_contains: string | null
		parentId_starts_with: string | null
		parentId_not_starts_with: string | null
		parentId_ends_with: string | null
		parentId_not_ends_with: string | null
		url: string | null
		url_not: string | null
		url_in: string[]
		url_not_in: string[]
		url_lt: string | null
		url_lte: string | null
		url_gt: string | null
		url_gte: string | null
		url_contains: string | null
		url_not_contains: string | null
		url_starts_with: string | null
		url_not_starts_with: string | null
		url_ends_with: string | null
		url_not_ends_with: string | null
		filetype: string | null
		filetype_not: string | null
		filetype_in: string[]
		filetype_not_in: string[]
		filetype_lt: string | null
		filetype_lte: string | null
		filetype_gt: string | null
		filetype_gte: string | null
		filetype_contains: string | null
		filetype_not_contains: string | null
		filetype_starts_with: string | null
		filetype_not_starts_with: string | null
		filetype_ends_with: string | null
		filetype_not_ends_with: string | null
		author: UserWhereInput | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		AND: MessageWhereInput[]
		OR: MessageWhereInput[]
		NOT: MessageWhereInput[]
	}

	export interface ArgsTodos {
		where: TodoWhereInput | null
		orderBy: TodoOrderByInput | null
		skip: number | null
		after: string | null
		before: string | null
		first: number | null
		last: number | null
	}

	export type IdResolver = (
		parent: TodoProject,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type NameResolver = (
		parent: TodoProject,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type TodosResolver = (
		parent: TodoProject,
		args: ArgsTodos,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Todo[] | Promise<Todo[]>

	export type AuthorResolver = (
		parent: TodoProject,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => User | Promise<User>

	export type CreatedAtResolver = (
		parent: TodoProject,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type UpdatedAtResolver = (
		parent: TodoProject,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export interface Type {
		id: (
			parent: TodoProject,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		name: (
			parent: TodoProject,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		todos: (
			parent: TodoProject,
			args: ArgsTodos,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Todo[] | Promise<Todo[]>

		author: (
			parent: TodoProject,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => User | Promise<User>

		createdAt: (
			parent: TodoProject,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		updatedAt: (
			parent: TodoProject,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>
	}
}

export namespace OrderResolvers {
	export const defaultResolvers = {
		id: (parent: Order) => parent.id,
		total_price: (parent: Order) => parent.total_price,
		confirmed: (parent: Order) => parent.confirmed,
		currency: (parent: Order) => parent.currency,
		createdAt: (parent: Order) => parent.createdAt,
		updatedAt: (parent: Order) => parent.updatedAt
	}

	export interface ProductWhereInput {
		id: string | null
		id_not: string | null
		id_in: string[]
		id_not_in: string[]
		id_lt: string | null
		id_lte: string | null
		id_gt: string | null
		id_gte: string | null
		id_contains: string | null
		id_not_contains: string | null
		id_starts_with: string | null
		id_not_starts_with: string | null
		id_ends_with: string | null
		id_not_ends_with: string | null
		name: string | null
		name_not: string | null
		name_in: string[]
		name_not_in: string[]
		name_lt: string | null
		name_lte: string | null
		name_gt: string | null
		name_gte: string | null
		name_contains: string | null
		name_not_contains: string | null
		name_starts_with: string | null
		name_not_starts_with: string | null
		name_ends_with: string | null
		name_not_ends_with: string | null
		stock: number | null
		stock_not: number | null
		stock_in: number[]
		stock_not_in: number[]
		stock_lt: number | null
		stock_lte: number | null
		stock_gt: number | null
		stock_gte: number | null
		price: number | null
		price_not: number | null
		price_in: number[]
		price_not_in: number[]
		price_lt: number | null
		price_lte: number | null
		price_gt: number | null
		price_gte: number | null
		createdAt: string | null
		createdAt_not: string | null
		createdAt_in: string[]
		createdAt_not_in: string[]
		createdAt_lt: string | null
		createdAt_lte: string | null
		createdAt_gt: string | null
		createdAt_gte: string | null
		updatedAt: string | null
		updatedAt_not: string | null
		updatedAt_in: string[]
		updatedAt_not_in: string[]
		updatedAt_lt: string | null
		updatedAt_lte: string | null
		updatedAt_gt: string | null
		updatedAt_gte: string | null
		AND: ProductWhereInput[]
		OR: ProductWhereInput[]
		NOT: ProductWhereInput[]
	}

	export interface ArgsProducts {
		where: ProductWhereInput | null
		orderBy: ProductOrderByInput | null
		skip: number | null
		after: string | null
		before: string | null
		first: number | null
		last: number | null
	}

	export type IdResolver = (
		parent: Order,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type ProductsResolver = (
		parent: Order,
		args: ArgsProducts,
		ctx: Context,
		info: GraphQLResolveInfo
	) => Product[] | Promise<Product[]>

	export type CustomerResolver = (
		parent: Order,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => Customer | Promise<Customer>

	export type Total_priceResolver = (
		parent: Order,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => number | Promise<number>

	export type ConfirmedResolver = (
		parent: Order,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export type CurrencyResolver = (
		parent: Order,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type CreatedAtResolver = (
		parent: Order,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type UpdatedAtResolver = (
		parent: Order,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export interface Type {
		id: (
			parent: Order,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		products: (
			parent: Order,
			args: ArgsProducts,
			ctx: Context,
			info: GraphQLResolveInfo
		) => Product[] | Promise<Product[]>

		customer: (
			parent: Order,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => Customer | Promise<Customer>

		total_price: (
			parent: Order,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => number | Promise<number>

		confirmed: (
			parent: Order,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>

		currency: (
			parent: Order,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		createdAt: (
			parent: Order,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		updatedAt: (
			parent: Order,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>
	}
}

export namespace ProductResolvers {
	export const defaultResolvers = {
		id: (parent: Product) => parent.id,
		name: (parent: Product) => parent.name,
		stock: (parent: Product) => parent.stock,
		price: (parent: Product) => parent.price,
		createdAt: (parent: Product) => parent.createdAt,
		updatedAt: (parent: Product) => parent.updatedAt
	}

	export type IdResolver = (
		parent: Product,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type NameResolver = (
		parent: Product,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type StockResolver = (
		parent: Product,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => number | Promise<number>

	export type PriceResolver = (
		parent: Product,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => number | Promise<number>

	export type CreatedAtResolver = (
		parent: Product,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type UpdatedAtResolver = (
		parent: Product,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export interface Type {
		id: (
			parent: Product,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		name: (
			parent: Product,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		stock: (
			parent: Product,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => number | Promise<number>

		price: (
			parent: Product,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => number | Promise<number>

		createdAt: (
			parent: Product,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		updatedAt: (
			parent: Product,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>
	}
}

export namespace CustomerResolvers {
	export const defaultResolvers = {
		id: (parent: Customer) => parent.id,
		stripeId: (parent: Customer) => parent.stripeId,
		createdAt: (parent: Customer) => parent.createdAt,
		updatedAt: (parent: Customer) => parent.updatedAt
	}

	export type IdResolver = (
		parent: Customer,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type UserResolver = (
		parent: Customer,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => User | Promise<User>

	export type StripeIdResolver = (
		parent: Customer,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type CreatedAtResolver = (
		parent: Customer,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type UpdatedAtResolver = (
		parent: Customer,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export interface Type {
		id: (
			parent: Customer,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		user: (
			parent: Customer,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => User | Promise<User>

		stripeId: (
			parent: Customer,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		createdAt: (
			parent: Customer,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		updatedAt: (
			parent: Customer,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>
	}
}

export namespace SubscriptionResolvers {
	export const defaultResolvers = {}

	export interface ArgsFriendRequestSubscription {
		id: string
	}

	export interface ArgsFriendSubscription {
		id: string
	}

	export interface ArgsNotificationSubscription {
		id: string
	}

	export interface ArgsMessageSubscription {
		channelId: string
	}

	export type FriendRequestSubscriptionResolver = {
		subscribe: (
			parent: undefined,
			args: ArgsFriendRequestSubscription,
			ctx: Context,
			info: GraphQLResolveInfo
		) =>
			| AsyncIterator<UserSubscriptionPayload>
			| Promise<AsyncIterator<UserSubscriptionPayload>>
		resolve?: (
			parent: undefined,
			args: ArgsFriendRequestSubscription,
			ctx: Context,
			info: GraphQLResolveInfo
		) => UserSubscriptionPayload | Promise<UserSubscriptionPayload>
	}

	export type FriendSubscriptionResolver = {
		subscribe: (
			parent: undefined,
			args: ArgsFriendSubscription,
			ctx: Context,
			info: GraphQLResolveInfo
		) =>
			| AsyncIterator<UserSubscriptionPayload>
			| Promise<AsyncIterator<UserSubscriptionPayload>>
		resolve?: (
			parent: undefined,
			args: ArgsFriendSubscription,
			ctx: Context,
			info: GraphQLResolveInfo
		) => UserSubscriptionPayload | Promise<UserSubscriptionPayload>
	}

	export type NotificationSubscriptionResolver = {
		subscribe: (
			parent: undefined,
			args: ArgsNotificationSubscription,
			ctx: Context,
			info: GraphQLResolveInfo
		) =>
			| AsyncIterator<NotificationSubscriptionPayload>
			| Promise<AsyncIterator<NotificationSubscriptionPayload>>
		resolve?: (
			parent: undefined,
			args: ArgsNotificationSubscription,
			ctx: Context,
			info: GraphQLResolveInfo
		) =>
			| NotificationSubscriptionPayload
			| Promise<NotificationSubscriptionPayload>
	}

	export type MessageSubscriptionResolver = {
		subscribe: (
			parent: undefined,
			args: ArgsMessageSubscription,
			ctx: Context,
			info: GraphQLResolveInfo
		) =>
			| AsyncIterator<MessageSubscriptionPayload>
			| Promise<AsyncIterator<MessageSubscriptionPayload>>
		resolve?: (
			parent: undefined,
			args: ArgsMessageSubscription,
			ctx: Context,
			info: GraphQLResolveInfo
		) => MessageSubscriptionPayload | Promise<MessageSubscriptionPayload>
	}

	export interface Type {
		friendRequestSubscription: {
			subscribe: (
				parent: undefined,
				args: ArgsFriendRequestSubscription,
				ctx: Context,
				info: GraphQLResolveInfo
			) =>
				| AsyncIterator<UserSubscriptionPayload>
				| Promise<AsyncIterator<UserSubscriptionPayload>>
			resolve?: (
				parent: undefined,
				args: ArgsFriendRequestSubscription,
				ctx: Context,
				info: GraphQLResolveInfo
			) => UserSubscriptionPayload | Promise<UserSubscriptionPayload>
		}

		friendSubscription: {
			subscribe: (
				parent: undefined,
				args: ArgsFriendSubscription,
				ctx: Context,
				info: GraphQLResolveInfo
			) =>
				| AsyncIterator<UserSubscriptionPayload>
				| Promise<AsyncIterator<UserSubscriptionPayload>>
			resolve?: (
				parent: undefined,
				args: ArgsFriendSubscription,
				ctx: Context,
				info: GraphQLResolveInfo
			) => UserSubscriptionPayload | Promise<UserSubscriptionPayload>
		}

		NotificationSubscription: {
			subscribe: (
				parent: undefined,
				args: ArgsNotificationSubscription,
				ctx: Context,
				info: GraphQLResolveInfo
			) =>
				| AsyncIterator<NotificationSubscriptionPayload>
				| Promise<AsyncIterator<NotificationSubscriptionPayload>>
			resolve?: (
				parent: undefined,
				args: ArgsNotificationSubscription,
				ctx: Context,
				info: GraphQLResolveInfo
			) =>
				| NotificationSubscriptionPayload
				| Promise<NotificationSubscriptionPayload>
		}

		messageSubscription: {
			subscribe: (
				parent: undefined,
				args: ArgsMessageSubscription,
				ctx: Context,
				info: GraphQLResolveInfo
			) =>
				| AsyncIterator<MessageSubscriptionPayload>
				| Promise<AsyncIterator<MessageSubscriptionPayload>>
			resolve?: (
				parent: undefined,
				args: ArgsMessageSubscription,
				ctx: Context,
				info: GraphQLResolveInfo
			) =>
				| MessageSubscriptionPayload
				| Promise<MessageSubscriptionPayload>
		}
	}
}

export namespace UserSubscriptionPayloadResolvers {
	export const defaultResolvers = {
		mutation: (parent: UserSubscriptionPayload) => parent.mutation,
		node: (parent: UserSubscriptionPayload) => parent.node,
		updatedFields: (parent: UserSubscriptionPayload) =>
			parent.updatedFields,
		previousValues: (parent: UserSubscriptionPayload) =>
			parent.previousValues
	}

	export type MutationResolver = (
		parent: UserSubscriptionPayload,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => MutationType | Promise<MutationType>

	export type NodeResolver = (
		parent: UserSubscriptionPayload,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => User | null | Promise<User | null>

	export type UpdatedFieldsResolver = (
		parent: UserSubscriptionPayload,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string[] | Promise<string[]>

	export type PreviousValuesResolver = (
		parent: UserSubscriptionPayload,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => UserPreviousValues | null | Promise<UserPreviousValues | null>

	export interface Type {
		mutation: (
			parent: UserSubscriptionPayload,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => MutationType | Promise<MutationType>

		node: (
			parent: UserSubscriptionPayload,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => User | null | Promise<User | null>

		updatedFields: (
			parent: UserSubscriptionPayload,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string[] | Promise<string[]>

		previousValues: (
			parent: UserSubscriptionPayload,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => UserPreviousValues | null | Promise<UserPreviousValues | null>
	}
}

export namespace UserPreviousValuesResolvers {
	export const defaultResolvers = {
		id: (parent: UserPreviousValues) => parent.id,
		email: (parent: UserPreviousValues) => parent.email,
		set_private: (parent: UserPreviousValues) => parent.set_private,
		username: (parent: UserPreviousValues) => parent.username,
		password: (parent: UserPreviousValues) => parent.password,
		gitHubId: (parent: UserPreviousValues) =>
			parent.gitHubId === undefined ? null : parent.gitHubId,
		facebookId: (parent: UserPreviousValues) =>
			parent.facebookId === undefined ? null : parent.facebookId,
		twitterId: (parent: UserPreviousValues) =>
			parent.twitterId === undefined ? null : parent.twitterId,
		gmailId: (parent: UserPreviousValues) =>
			parent.gmailId === undefined ? null : parent.gmailId,
		private: (parent: UserPreviousValues) => parent.private,
		confirmed: (parent: UserPreviousValues) => parent.confirmed,
		online: (parent: UserPreviousValues) => parent.online,
		createdAt: (parent: UserPreviousValues) => parent.createdAt,
		updatedAt: (parent: UserPreviousValues) => parent.updatedAt,
		role: (parent: UserPreviousValues) => parent.role
	}

	export type IdResolver = (
		parent: UserPreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type EmailResolver = (
		parent: UserPreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type Set_privateResolver = (
		parent: UserPreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export type UsernameResolver = (
		parent: UserPreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type PasswordResolver = (
		parent: UserPreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type GitHubIdResolver = (
		parent: UserPreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | null | Promise<string | null>

	export type FacebookIdResolver = (
		parent: UserPreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | null | Promise<string | null>

	export type TwitterIdResolver = (
		parent: UserPreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | null | Promise<string | null>

	export type GmailIdResolver = (
		parent: UserPreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | null | Promise<string | null>

	export type PrivateResolver = (
		parent: UserPreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export type ConfirmedResolver = (
		parent: UserPreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export type OnlineResolver = (
		parent: UserPreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => boolean | Promise<boolean>

	export type CreatedAtResolver = (
		parent: UserPreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type UpdatedAtResolver = (
		parent: UserPreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type RoleResolver = (
		parent: UserPreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => UserRole | Promise<UserRole>

	export interface Type {
		id: (
			parent: UserPreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		email: (
			parent: UserPreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		set_private: (
			parent: UserPreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>

		username: (
			parent: UserPreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		password: (
			parent: UserPreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		gitHubId: (
			parent: UserPreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | null | Promise<string | null>

		facebookId: (
			parent: UserPreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | null | Promise<string | null>

		twitterId: (
			parent: UserPreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | null | Promise<string | null>

		gmailId: (
			parent: UserPreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | null | Promise<string | null>

		private: (
			parent: UserPreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>

		confirmed: (
			parent: UserPreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>

		online: (
			parent: UserPreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => boolean | Promise<boolean>

		createdAt: (
			parent: UserPreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		updatedAt: (
			parent: UserPreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		role: (
			parent: UserPreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => UserRole | Promise<UserRole>
	}
}

export namespace NotificationSubscriptionPayloadResolvers {
	export const defaultResolvers = {
		mutation: (parent: NotificationSubscriptionPayload) => parent.mutation,
		node: (parent: NotificationSubscriptionPayload) => parent.node,
		updatedFields: (parent: NotificationSubscriptionPayload) =>
			parent.updatedFields,
		previousValues: (parent: NotificationSubscriptionPayload) =>
			parent.previousValues
	}

	export type MutationResolver = (
		parent: NotificationSubscriptionPayload,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => MutationType | Promise<MutationType>

	export type NodeResolver = (
		parent: NotificationSubscriptionPayload,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => Notification | null | Promise<Notification | null>

	export type UpdatedFieldsResolver = (
		parent: NotificationSubscriptionPayload,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string[] | Promise<string[]>

	export type PreviousValuesResolver = (
		parent: NotificationSubscriptionPayload,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) =>
		| NotificationPreviousValues
		| null
		| Promise<NotificationPreviousValues | null>

	export interface Type {
		mutation: (
			parent: NotificationSubscriptionPayload,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => MutationType | Promise<MutationType>

		node: (
			parent: NotificationSubscriptionPayload,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => Notification | null | Promise<Notification | null>

		updatedFields: (
			parent: NotificationSubscriptionPayload,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string[] | Promise<string[]>

		previousValues: (
			parent: NotificationSubscriptionPayload,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) =>
			| NotificationPreviousValues
			| null
			| Promise<NotificationPreviousValues | null>
	}
}

export namespace NotificationPreviousValuesResolvers {
	export const defaultResolvers = {
		id: (parent: NotificationPreviousValues) => parent.id,
		message: (parent: NotificationPreviousValues) => parent.message
	}

	export type IdResolver = (
		parent: NotificationPreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type MessageResolver = (
		parent: NotificationPreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export interface Type {
		id: (
			parent: NotificationPreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		message: (
			parent: NotificationPreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>
	}
}

export namespace MessageSubscriptionPayloadResolvers {
	export const defaultResolvers = {
		mutation: (parent: MessageSubscriptionPayload) => parent.mutation,
		node: (parent: MessageSubscriptionPayload) => parent.node,
		updatedFields: (parent: MessageSubscriptionPayload) =>
			parent.updatedFields,
		previousValues: (parent: MessageSubscriptionPayload) =>
			parent.previousValues
	}

	export type MutationResolver = (
		parent: MessageSubscriptionPayload,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => MutationType | Promise<MutationType>

	export type NodeResolver = (
		parent: MessageSubscriptionPayload,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => Message | null | Promise<Message | null>

	export type UpdatedFieldsResolver = (
		parent: MessageSubscriptionPayload,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string[] | Promise<string[]>

	export type PreviousValuesResolver = (
		parent: MessageSubscriptionPayload,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => MessagePreviousValues | null | Promise<MessagePreviousValues | null>

	export interface Type {
		mutation: (
			parent: MessageSubscriptionPayload,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => MutationType | Promise<MutationType>

		node: (
			parent: MessageSubscriptionPayload,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => Message | null | Promise<Message | null>

		updatedFields: (
			parent: MessageSubscriptionPayload,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string[] | Promise<string[]>

		previousValues: (
			parent: MessageSubscriptionPayload,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) =>
			| MessagePreviousValues
			| null
			| Promise<MessagePreviousValues | null>
	}
}

export namespace MessagePreviousValuesResolvers {
	export const defaultResolvers = {
		id: (parent: MessagePreviousValues) => parent.id,
		body: (parent: MessagePreviousValues) => parent.body,
		parentId: (parent: MessagePreviousValues) => parent.parentId,
		url: (parent: MessagePreviousValues) => parent.url,
		filetype: (parent: MessagePreviousValues) => parent.filetype,
		createdAt: (parent: MessagePreviousValues) => parent.createdAt,
		updatedAt: (parent: MessagePreviousValues) => parent.updatedAt
	}

	export type IdResolver = (
		parent: MessagePreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type BodyResolver = (
		parent: MessagePreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type ParentIdResolver = (
		parent: MessagePreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type UrlResolver = (
		parent: MessagePreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type FiletypeResolver = (
		parent: MessagePreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type CreatedAtResolver = (
		parent: MessagePreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export type UpdatedAtResolver = (
		parent: MessagePreviousValues,
		args: {},
		ctx: Context,
		info: GraphQLResolveInfo
	) => string | Promise<string>

	export interface Type {
		id: (
			parent: MessagePreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		body: (
			parent: MessagePreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		parentId: (
			parent: MessagePreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		url: (
			parent: MessagePreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		filetype: (
			parent: MessagePreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		createdAt: (
			parent: MessagePreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>

		updatedAt: (
			parent: MessagePreviousValues,
			args: {},
			ctx: Context,
			info: GraphQLResolveInfo
		) => string | Promise<string>
	}
}

export interface Resolvers {
	Query: QueryResolvers.Type
	MyUser: MyUserResolvers.Type
	Notification: NotificationResolvers.Type
	User: UserResolvers.Type
	Comment: CommentResolvers.Type
	Rating: RatingResolvers.Type
	File: FileResolvers.Type
	Team: TeamResolvers.Type
	Channel: ChannelResolvers.Type
	Message: MessageResolvers.Type
	ProfileResponse: ProfileResponseResolvers.Type
	ProfileError: ProfileErrorResolvers.Type
	CommentConnection: CommentConnectionResolvers.Type
	PageInfo: PageInfoResolvers.Type
	CommentEdge: CommentEdgeResolvers.Type
	AggregateComment: AggregateCommentResolvers.Type
	Todo: TodoResolvers.Type
	Mutation: MutationResolvers.Type
	FriendRemoveResponse: FriendRemoveResponseResolvers.Type
	DeleteCommentResponse: DeleteCommentResponseResolvers.Type
	LoginResponse: LoginResponseResolvers.Type
	RegisterResponse: RegisterResponseResolvers.Type
	ForgotPasswordResponse: ForgotPasswordResponseResolvers.Type
	VoidResponse: VoidResponseResolvers.Type
	Error: ErrorResolvers.Type
	AddFriendResponse: AddFriendResponseResolvers.Type
	TodoProject: TodoProjectResolvers.Type
	Order: OrderResolvers.Type
	Product: ProductResolvers.Type
	Customer: CustomerResolvers.Type
	Subscription: SubscriptionResolvers.Type
	UserSubscriptionPayload: UserSubscriptionPayloadResolvers.Type
	UserPreviousValues: UserPreviousValuesResolvers.Type
	NotificationSubscriptionPayload: NotificationSubscriptionPayloadResolvers.Type
	NotificationPreviousValues: NotificationPreviousValuesResolvers.Type
	MessageSubscriptionPayload: MessageSubscriptionPayloadResolvers.Type
	MessagePreviousValues: MessagePreviousValuesResolvers.Type
}
